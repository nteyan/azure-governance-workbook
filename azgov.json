{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "3dca9244-a24d-4cae-a9a2-153222573132",
            "cellValue": "SelectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Resource Consistency",
            "subTarget": "Consistency",
            "preText": "General",
            "style": "link"
          },
          {
            "id": "32016188-dbec-4976-bb1a-f4d90c42512b",
            "cellValue": "SelectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Acceleration Discipline",
            "subTarget": "Acceleration",
            "style": "link"
          },
          {
            "id": "c243225e-45da-4eb1-84c6-0b3e6cc79b53",
            "cellValue": "SelectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Security Discipline",
            "subTarget": "Security",
            "style": "link"
          },
          {
            "id": "d8c7cb3a-67c1-473f-aa14-1321d96fbb9f",
            "cellValue": "SelectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Policies Compliance & Remediation",
            "subTarget": "Policies",
            "style": "link"
          }
        ]
      },
      "name": "links - 17"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "parameters": [
                {
                  "id": "51aa3a9b-14e0-4c22-a60d-abdbf8813f00",
                  "version": "KqlParameterItem/1.0",
                  "name": "Subscription",
                  "type": 6,
                  "isRequired": true,
                  "isGlobal": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "includeAll": true,
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "defaultValue": "value::all",
                  "value": [
                    "value::all"
                  ]
                }
              ],
              "style": "above",
              "queryType": 1,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "customWidth": "33",
            "conditionalVisibility": {
              "parameterName": "SelectedTab",
              "comparison": "isNotEqualTo",
              "value": "CostInformation"
            },
            "name": "parameters - 0"
          },
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "19b06e9e-eec2-4a7e-935d-92d77b2f87a3",
                  "cellValue": "SelectedTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Overview",
                  "subTarget": "RC_Overview",
                  "preText": "Overview",
                  "style": "link"
                },
                {
                  "id": "528e35b9-aca4-423f-9267-50f62011a3cb",
                  "cellValue": "SelectedTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Compute",
                  "subTarget": "RC_Compute",
                  "style": "link"
                },
                {
                  "id": "2f4e49d7-3198-4173-af1c-4cf4c5178000",
                  "cellValue": "SelectedTab",
                  "linkTarget": "parameter",
                  "linkLabel": "PaaS",
                  "subTarget": "RC_PaaS",
                  "style": "link"
                },
                {
                  "id": "c17ce2c0-83e6-4e5c-9c3e-f34cbf887e73",
                  "cellValue": "SelectedTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Network",
                  "subTarget": "RC_Network",
                  "style": "link"
                },
                {
                  "id": "f8f7e1fc-8f5d-442a-9788-3eabbf8ab275",
                  "cellValue": "SelectedTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Security",
                  "subTarget": "RC_Security",
                  "style": "link"
                },
                {
                  "id": "80ad2db8-a21e-43e9-bd28-75d8d606eaf5",
                  "cellValue": "SelectedTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Monitoring",
                  "subTarget": "RC_Monitoring",
                  "style": "link"
                },
                {
                  "id": "3dc527f3-0f3a-4f37-a18b-c34fd1d1a491",
                  "cellValue": "SelectedTab",
                  "linkTarget": "parameter",
                  "linkLabel": "Backup",
                  "subTarget": "RC_Backup",
                  "style": "link"
                }
              ]
            },
            "name": "RC_Menu"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resourcecontainers \r\n| where type has \"microsoft.resources/subscriptions/resourcegroups\"\r\n| summarize Count=count(type) by type, subscriptionId | extend type = replace(@\"microsoft.resources/subscriptions/resourcegroups\", @\"Resource Groups\", type)",
                    "size": 1,
                    "title": "Subscriptions and Resource Groups",
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "$gen_group",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": null,
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "type",
                          "formatter": 16,
                          "formatOptions": {
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "subscriptionId",
                          "formatter": 5
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "subscriptionId"
                        ],
                        "expandTopLevel": true
                      }
                    },
                    "tileSettings": {
                      "showBorder": false,
                      "titleContent": {
                        "columnMatch": "type",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "Count",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    }
                  },
                  "name": "Subscriptions and Resource Groups"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Resources\n| summarize count()",
                    "size": 3,
                    "title": "Count of All Resources",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "tiles",
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "count_",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        }
                      },
                      "showBorder": false
                    }
                  },
                  "customWidth": "20",
                  "name": "Count of All Resources"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Resources \r\n| extend type = case(\r\ntype contains 'microsoft.netapp/netappaccounts', 'NetApp Accounts',\r\ntype contains \"microsoft.compute\", \"Azure Compute\",\r\ntype contains \"microsoft.logic\", \"LogicApps\",\r\ntype contains 'microsoft.keyvault/vaults', \"Key Vaults\",\r\ntype contains 'microsoft.storage/storageaccounts', \"Storage Accounts\",\r\ntype contains 'microsoft.compute/availabilitysets', 'Availability Sets',\r\ntype contains 'microsoft.operationalinsights/workspaces', 'Azure Monitor Resources',\r\ntype contains 'microsoft.operationsmanagement', 'Operations Management Resources',\r\ntype contains 'microsoft.insights', 'Azure Monitor Resources',\r\ntype contains 'microsoft.desktopvirtualization/applicationgroups', 'WVD Application Groups',\r\ntype contains 'microsoft.desktopvirtualization/workspaces', 'WVD Workspaces',\r\ntype contains 'microsoft.desktopvirtualization/hostpools', 'WVD Hostpools',\r\ntype contains 'microsoft.recoveryservices/vaults', 'Backup Vaults',\r\ntype contains 'microsoft.web', 'App Services',\r\ntype contains 'microsoft.managedidentity/userassignedidentities','Managed Identities',\r\ntype contains 'microsoft.storagesync/storagesyncservices', 'Azure File Sync',\r\ntype contains 'microsoft.hybridcompute/machines', 'ARC Machines',\r\ntype contains 'Microsoft.EventHub', 'Event Hub',\r\ntype contains 'Microsoft.EventGrid', 'Event Grid',\r\ntype contains 'Microsoft.Sql', 'SQL Resources',\r\ntype contains 'Microsoft.HDInsight/clusters', 'HDInsight Clusters',\r\ntype contains 'microsoft.devtestlab', 'DevTest Labs Resources',\r\ntype contains 'microsoft.containerinstance', 'Container Instances Resources',\r\ntype contains 'microsoft.portal/dashboards', 'Azure Dashboards',\r\ntype contains 'microsoft.containerregistry/registries', 'Container Registry',\r\ntype contains 'microsoft.automation', 'Automation Resources',\r\ntype contains 'sendgrid.email/accounts', 'SendGrid Accounts',\r\ntype contains 'microsoft.datafactory/factories', 'Data Factory',\r\ntype contains 'microsoft.databricks/workspaces', 'Databricks Workspaces',\r\ntype contains 'microsoft.machinelearningservices/workspaces', 'Machine Learnings Workspaces',\r\ntype contains 'microsoft.alertsmanagement/smartdetectoralertrules', 'Azure Monitor Resources',\r\ntype contains 'microsoft.apimanagement/service', 'API Management Services',\r\ntype contains 'microsoft.dbforpostgresql', 'PostgreSQL Resources',\r\ntype contains 'microsoft.scheduler/jobcollections', 'Scheduler Job Collections',\r\ntype contains 'microsoft.visualstudio/account', 'Azure DevOps Organization',\r\ntype contains 'microsoft.network/', 'Network Resources',\r\ntype contains 'microsoft.migrate/' or type contains 'microsoft.offazure', 'Azure Migrate Resources',\r\ntype contains 'microsoft.servicebus/namespaces', 'Service Bus Namespaces',\r\ntype contains 'microsoft.classic', 'ASM Obsolete Resources',\r\ntype contains 'microsoft.resources/templatespecs', 'Template Spec Resources',\r\ntype contains 'microsoft.virtualmachineimages', 'VM Image Templates',\r\ntype contains 'microsoft.documentdb', 'CosmosDB DB Resources',\r\ntype contains 'microsoft.alertsmanagement/actionrules', 'Azure Monitor Resources',\r\ntype contains 'microsoft.kubernetes/connectedclusters', 'ARC Kubernetes Clusters',\r\ntype contains 'microsoft.purview', 'Purview Resources',\r\ntype contains 'microsoft.security', 'Security Resources',\r\ntype contains 'microsoft.cdn', 'CDN Resources',\r\ntype contains 'microsoft.devices','IoT Resources',\r\ntype contains 'microsoft.datamigration', 'Data Migraiton Services',\r\ntype contains 'microsoft.cognitiveservices', 'Congitive Services',\r\ntype contains 'microsoft.customproviders', 'Custom Providers',\r\ntype contains 'microsoft.appconfiguration', 'App Services',\r\ntype contains 'microsoft.search', 'Search Services',\r\ntype contains 'microsoft.maps', 'Maps',\r\ntype contains 'microsoft.containerservice/managedclusters', 'AKS',\r\ntype contains 'microsoft.signalrservice', 'SignalR',\r\ntype contains 'microsoft.resourcegraph/queries', 'Resource Graph Queries',\r\ntype contains 'microsoft.batch', 'MS Batch',\r\ntype contains 'microsoft.analysisservices', 'Analysis Services',\r\ntype contains 'microsoft.synapse/workspaces', 'Synapse Workspaces',\r\ntype contains 'microsoft.synapse/workspaces/sqlpools', 'Synapse SQL Pools',\r\ntype contains 'microsoft.kusto/clusters', 'ADX Clusters',\r\ntype contains 'microsoft.resources/deploymentscripts', 'Deployment Scripts',\r\ntype contains 'microsoft.aad/domainservices', 'AD Domain Services',\r\ntype contains 'microsoft.labservices/labaccounts', 'Lab Accounts',\r\ntype contains 'microsoft.automanage/accounts', 'Automanage Accounts',\r\ntype contains 'microsoft.relay/namespaces', 'Azure Relay',\r\ntype contains 'microsoft.notificationhubs/namespaces', 'Notification Hubs',\r\ntype contains 'microsoft.digitaltwins/digitaltwinsinstances', 'Digital Twins',\r\nstrcat(\"Not Translated: \", type))\r\n| summarize count() by type\r\n| order by count_ desc",
                    "size": 3,
                    "title": "Resource Number by Type (Top 10)",
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "tiles",
                    "tileSettings": {
                      "showBorder": false,
                      "titleContent": {
                        "columnMatch": "type",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "count_",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      },
                      "rowLimit": 10
                    }
                  },
                  "customWidth": "80",
                  "name": "Resource Number by Type"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| summarize count() by location",
                    "size": 3,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "map",
                    "mapSettings": {
                      "locInfo": "AzureLoc",
                      "sizeSettings": "count_",
                      "sizeAggregation": "Sum",
                      "legendMetric": "count_",
                      "legendAggregation": "Sum",
                      "itemColorSettings": {
                        "type": "heatmap",
                        "colorAggregation": "Sum",
                        "nodeColorField": "count_",
                        "heatmapPalette": "greenRed"
                      },
                      "labelSettings": "location",
                      "locInfoColumn": "location"
                    }
                  },
                  "name": "query - 6"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "## Untagged Resource Analysis"
                  },
                  "name": "text - 11"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "ResourceContainers\r\n| where type =~ 'microsoft.resources/subscriptions/resourcegroups'\r\n| extend TagBool = iff(tags != '' and tags != '[]', \"Tagged\",\"Untagged\")\r\n| summarize count() by TagBool\r\n",
                    "size": 3,
                    "title": "Resource Groups Tagging Compliance",
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "piechart",
                    "tileSettings": {
                      "showBorder": false,
                      "titleContent": {
                        "columnMatch": "TagBool",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "count_",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    },
                    "graphSettings": {
                      "type": 0,
                      "topContent": {
                        "columnMatch": "TagBool",
                        "formatter": 1
                      },
                      "centerContent": {
                        "columnMatch": "count_",
                        "formatter": 1,
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    }
                  },
                  "customWidth": "50",
                  "name": "query - 7"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Resources\r\n| extend TagBool = iff(tags != '' and tags != '[]', \"Tagged\",\"Untagged\")\r\n| summarize count() by TagBool\r\n\r\n",
                    "size": 3,
                    "title": "Resource Tagging Compliance",
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "piechart",
                    "tileSettings": {
                      "showBorder": false,
                      "titleContent": {
                        "columnMatch": "TagBool",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "count_",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    }
                  },
                  "customWidth": "50",
                  "name": "query - 8"
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "parameters": [
                      {
                        "id": "6e771b18-7292-42da-8d55-581097f4eb70",
                        "version": "KqlParameterItem/1.0",
                        "name": "ResourceType",
                        "label": "Resource Type",
                        "type": 7,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "resources | where tags == ''\r\n| distinct type",
                        "crossComponentResources": [
                          "{Subscription}"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "showDefault": false
                        },
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "defaultValue": "value::all",
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources",
                        "value": [
                          "value::all"
                        ]
                      }
                    ],
                    "style": "formHorizontal",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources"
                  },
                  "name": "parameters - 11"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources \r\n| where tags =~ '' or tags =~ '{}'\r\n| where type in~ ({ResourceType}) or '*' in~ ({ResourceType})\r\n| project Name=id, subscriptionId\r\n",
                    "size": 3,
                    "title": "Untagged Resources",
                    "noDataMessage": "No Untagged Resources found",
                    "noDataMessageStyle": 3,
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "gridSettings": {
                      "rowLimit": 100,
                      "filter": true
                    }
                  },
                  "name": "query - 10"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SelectedTab",
              "comparison": "isEqualTo",
              "value": "RC_Overview"
            },
            "name": "RC_Overview"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Resources | where type == \"microsoft.compute/virtualmachines\"\r\n| extend vmState = tostring(properties.extended.instanceView.powerState.displayStatus)\r\n| extend vmState = iif(isempty(vmState), \"VM State Unknown\", (vmState))\r\n| summarize count() by vmState",
                    "size": 3,
                    "title": "Current VM Status",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "tiles",
                    "tileSettings": {
                      "showBorder": false,
                      "titleContent": {
                        "columnMatch": "vmState",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "count_",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    }
                  },
                  "customWidth": "50",
                  "name": "Current VM Status"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Resources | where type =~ 'Microsoft.Compute/virtualMachines'\n| summarize count() by tostring(properties.storageProfile.osDisk.osType)",
                    "size": 3,
                    "title": "Virtual Machine Count per OS Type",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "tiles",
                    "tileSettings": {
                      "showBorder": false,
                      "titleContent": {
                        "columnMatch": "properties_storageProfile_osDisk_osType",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "count_",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    }
                  },
                  "customWidth": "50",
                  "name": "query - 2"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Resources\r\n| where type =~ 'Microsoft.Compute/virtualMachines'\r\n| project SKU = tostring(properties.hardwareProfile.vmSize)\r\n| summarize count() by SKU\r\n| order by count_ desc",
                    "size": 3,
                    "title": "VM by VM Type/Size",
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "tiles",
                    "tileSettings": {
                      "showBorder": false,
                      "titleContent": {
                        "columnMatch": "SKU",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "count_",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      },
                      "rowLimit": 10
                    },
                    "graphSettings": {
                      "type": 0,
                      "topContent": {
                        "columnMatch": "SKU",
                        "formatter": 1
                      },
                      "centerContent": {
                        "columnMatch": "count_",
                        "formatter": 1,
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    }
                  },
                  "name": "query - 14"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "advisorresources\r\n| where type == \"microsoft.advisor/recommendations\"\r\n| where tostring (properties.category) has \"Cost\"\r\n| where properties.shortDescription.problem has \"underutilized\"\r\n| where properties.impactedField has \"Compute\" or properties.impactedField has \"Container\" or properties.impactedField has \"Web\"\r\n| project AffectedResource=tostring(properties.resourceMetadata.resourceId),Impact=properties.impact,resourceGroup,AdditionaInfo=properties.extendedProperties,subscriptionId,Recommendation=tostring(properties.shortDescription.problem)\r\n",
                    "size": 0,
                    "title": "Underused Assets",
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ]
                  },
                  "customWidth": "100",
                  "name": "query - 17"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Resources\r\n| where type =~ 'microsoft.compute/virtualmachines'\r\n| extend nics=array_length(properties.networkProfile.networkInterfaces)\r\n| mv-expand nic=properties.networkProfile.networkInterfaces\r\n| where nics == 1 or nic.properties.primary =~ 'true' or isempty(nic)\r\n| project vmId = id, vmName = name, vmSize=tostring(properties.hardwareProfile.vmSize), nicId = tostring(nic.id)\r\n\t| join kind=leftouter (\r\n \t\tResources\r\n  \t\t| where type =~ 'microsoft.network/networkinterfaces'\r\n  \t\t| extend ipConfigsCount=array_length(properties.ipConfigurations)\r\n  \t\t| mv-expand ipconfig=properties.ipConfigurations\r\n  \t\t| where ipConfigsCount == 1 or ipconfig.properties.primary =~ 'true'\r\n  \t\t| project nicId = id, privateIP= tostring(ipconfig.properties.privateIPAddress), publicIpId = tostring(ipconfig.properties.publicIPAddress.id), subscriptionId) on nicId\r\n| project-away nicId1\r\n| summarize by vmId, vmSize, nicId, privateIP, publicIpId, subscriptionId\r\n\t| join kind=leftouter (\r\n  \t\tResources\r\n  \t\t| where type =~ 'microsoft.network/publicipaddresses'\r\n  \t\t| project publicIpId = id, publicIpAddress = tostring(properties.ipAddress)) on publicIpId\r\n| project-away publicIpId1\r\n| sort by publicIpAddress desc",
                    "size": 0,
                    "title": "Compute Networking",
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "filter": true
                    }
                  },
                  "name": "Compute Networking"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Resources | where type == \"microsoft.compute/virtualmachines\"\r\n| extend osDiskId= tostring(properties.storageProfile.osDisk.managedDisk.id)\r\n        | join kind=leftouter(resources\r\n            | where type =~ 'microsoft.compute/disks'\r\n            | where properties !has 'Unattached'\r\n            | where properties has 'osType'\r\n            | project OS = tostring(properties.osType), osSku = tostring(sku.name), osDiskSizeGB = toint(properties.diskSizeGB), osDiskId=tostring(id)) on osDiskId\r\n        | join kind=leftouter(Resources\r\n            | where type =~ 'microsoft.compute/disks'\r\n            | where properties !has \"osType\"\r\n            | where properties !has 'Unattached'\r\n            | project sku = tostring(sku.name), diskSizeGB = toint(properties.diskSizeGB), id = managedBy\r\n            | summarize sum(diskSizeGB), count(sku) by id, sku) on id\r\n| project vmId=id, OS, location, resourceGroup, subscriptionId, osDiskId, osSku, osDiskSizeGB, DataDisksGB=sum_diskSizeGB, diskSkuCount=count_sku\r\n| sort by diskSkuCount desc",
                    "size": 0,
                    "title": "Compute Disks",
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "filter": true
                    }
                  },
                  "name": "Compute Disks"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Resources  \r\n| where type contains \"microsoft.compute/disks\" \r\n| extend diskState = tostring(properties.diskState)\r\n| where managedBy == \"\"\r\n    or diskState == 'Unattached'\r\n| project id, diskState, resourceGroup, location, subscriptionId",
                    "size": 0,
                    "title": "Orphan Disks",
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ]
                  },
                  "name": "Orphan Disks"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type contains \"microsoft.network/networkinterfaces\"\r\n| where properties !has 'virtualmachine'\r\n| project id, resourceGroup, location, subscriptionId",
                    "size": 0,
                    "title": "Orphan NICs",
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ]
                  },
                  "name": "Orphan NICs"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SelectedTab",
              "comparison": "isEqualTo",
              "value": "RC_Compute"
            },
            "name": "RC_Compute"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "where type has \"microsoft.network\"\r\n| extend type = case(\r\n\ttype == 'microsoft.network/networkinterfaces', \"NICs\",\r\n\ttype == 'microsoft.network/networksecuritygroups', \"NSGs\", \r\n\ttype == \"microsoft.network/publicipaddresses\", \"Public IPs\", \r\n\ttype == 'microsoft.network/virtualnetworks', \"vNets\",\r\n\ttype == 'microsoft.network/networkwatchers/connectionmonitors', \"Connection Monitors\",\r\n\ttype == 'microsoft.network/privatednszones', \"Private DNS\",\r\n\ttype == 'microsoft.network/virtualnetworkgateways', @\"vNet Gateways\",\r\n\ttype == 'microsoft.network/connections', \"Connections\",\r\n\ttype == 'microsoft.network/networkwatchers', \"Network Watchers\",\r\n\ttype == 'microsoft.network/privateendpoints', \"Private Endpoints\",\r\n\ttype == 'microsoft.network/localnetworkgateways', \"Local Network Gateways\",\r\n\ttype == 'microsoft.network/privatednszones/virtualnetworklinks', \"vNet Links\",\r\n\ttype == 'microsoft.network/dnszones', 'DNS Zones',\r\n\ttype == 'microsoft.network/networkwatchers/flowlogs', 'Flow Logs',\r\n\ttype == 'microsoft.network/routetables', 'Route Tables',\r\n\ttype == 'microsoft.network/loadbalancers', 'Load Balancers',\r\n    type =~ 'Microsoft.Network/applicationGateways', 'Application Gateways',\r\n\tstrcat(\"Not Translated: \", type))\r\n| summarize count() by type\r\n| where type !has \"Not Translated\"",
                    "size": 3,
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "tiles",
                    "tileSettings": {
                      "showBorder": false,
                      "titleContent": {
                        "columnMatch": "type",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "count_",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    }
                  },
                  "name": "query - 0"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Resources\r\n| where type =~ 'microsoft.network/networksecuritygroups' and isnull(properties.networkInterfaces) and isnull(properties.subnets)\r\n| project Resource=id, resourceGroup, subscriptionId, location",
                    "size": 1,
                    "title": "Unassociated NSGs",
                    "noDataMessage": "No Unassociated NSGs Found",
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ]
                  },
                  "name": "Unassociated NSGs"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Resources\r\n    | where type =~ 'microsoft.network/networksecuritygroups'\r\n    | project id, nsgRules = parse_json(parse_json(properties).securityRules), networksecurityGroupName = name, subscriptionId, resourceGroup , location\r\n    | mvexpand nsgRule = nsgRules\r\n    | project id, location, access=nsgRule.properties.access,protocol=nsgRule.properties.protocol ,direction=nsgRule.properties.direction,provisioningState= nsgRule.properties.provisioningState ,priority=nsgRule.properties.priority, \r\n        sourceAddressPrefix = nsgRule.properties.sourceAddressPrefix, \r\n        sourceAddressPrefixes = nsgRule.properties.sourceAddressPrefixes,\r\n        destinationAddressPrefix = nsgRule.properties.destinationAddressPrefix, \r\n        destinationAddressPrefixes = nsgRule.properties.destinationAddressPrefixes, \r\n        networksecurityGroupName, networksecurityRuleName = tostring(nsgRule.name), \r\n        subscriptionId, resourceGroup,\r\n        destinationPortRanges = nsgRule.properties.destinationPortRanges,\r\n        destinationPortRange = nsgRule.properties.destinationPortRange,\r\n        sourcePortRanges = nsgRule.properties.sourcePortRanges,\r\n        sourcePortRange = nsgRule.properties.sourcePortRange\r\n| extend Details = pack_all()\r\n| project id, location, access, direction, sourceAddressPrefix, sourcePortRange, destinationPortRange, subscriptionId, resourceGroup, Details",
                    "size": 1,
                    "title": "NSG Rules",
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "subscriptionId",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "resourceGroup",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Details",
                          "formatter": 7,
                          "formatOptions": {
                            "linkTarget": "CellDetails",
                            "linkLabel": "🔍 View Details",
                            "linkIsContextBlade": true
                          }
                        }
                      ]
                    }
                  },
                  "name": "NSG Rules"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Resources\r\n| where type =~ 'Microsoft.Network/publicIPAddresses' and isnull(properties.ipAddress)\r\n| extend ipAddress = properties.ipAddress\r\n| extend sku = sku.name\r\n| extend Details = pack_all()\r\n| project Resource=id, subscriptionId, resourceGroup, name, location,sku,Details",
                    "size": 1,
                    "title": "Unattached Public IPs",
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "$gen_group",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "linkIsContextBlade": true,
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "Resource",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "subscriptionId",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Details",
                          "formatter": 7,
                          "formatOptions": {
                            "linkTarget": "CellDetails",
                            "linkLabel": "🔍 View Details",
                            "linkIsContextBlade": true
                          }
                        }
                      ],
                      "filter": true,
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "subscriptionId"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "Resource"
                      }
                    }
                  },
                  "name": "query - Networking Details - Unused PiPs"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SelectedTab",
              "comparison": "isEqualTo",
              "value": "RC_Network"
            },
            "name": "RC_Network"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "servicehealthresources\r\n| where type =~ 'Microsoft.ResourceHealth/events'\r\n| extend eventType = properties.EventType, status = properties.Status, description = properties.Title, trackingId = properties.TrackingId, summary = properties.Summary, priority = properties.Priority, impactStartTime = properties.ImpactStartTime, impactMitigationTime = properties.ImpactMitigationTime\r\n| where properties.Status == 'Active' and tolong(impactStartTime) > 1\r\n\r\n| extend Details = pack_all()\r\n| project ServiceHealthID=id, Description=description, Region=location, eventType, Status=status, Details",
                    "size": 3,
                    "title": "All active Service Health events",
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "ServiceHealthID",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": null,
                            "showIcon": false,
                            "customColumnWidthSetting": "20ch"
                          }
                        },
                        {
                          "columnMatch": "Description",
                          "formatter": 1,
                          "formatOptions": {
                            "customColumnWidthSetting": "60ch"
                          }
                        },
                        {
                          "columnMatch": "eventType",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "Status",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "Details",
                          "formatter": 7,
                          "formatOptions": {
                            "linkTarget": "CellDetails",
                            "linkLabel": "🔍 View Details",
                            "linkIsContextBlade": true
                          }
                        }
                      ],
                      "rowLimit": 10
                    },
                    "tileSettings": {
                      "showBorder": false
                    }
                  },
                  "name": "query - 15"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "## Activity Log Monitoring"
                  },
                  "name": "text - 15"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resourcechanges\r\n| extend changeTime = todatetime(properties.changeAttributes.timestamp), targetResourceId = tostring(properties.targetResourceId),\r\nchangeType = tostring(properties.changeType), correlationId = properties.changeAttributes.correlationId, \r\nchangedProperties = properties.changes, changeCount = properties.changeAttributes.changesCount\r\n| where changeTime > ago(1d)\r\n| order by changeTime desc\r\n| project changeTime, targetResourceId, changeType, correlationId, changeCount, changedProperties",
                    "size": 0,
                    "title": "All changes in the past one day",
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "changeTime",
                          "formatter": 6,
                          "formatOptions": {
                            "customColumnWidthSetting": "24ch"
                          }
                        },
                        {
                          "columnMatch": "targetResourceId",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "42.7143ch"
                          }
                        },
                        {
                          "columnMatch": "changedProperties",
                          "formatter": 7,
                          "formatOptions": {
                            "linkTarget": "CellDetails",
                            "linkLabel": "🔍 View Details",
                            "linkIsContextBlade": true
                          }
                        }
                      ]
                    }
                  },
                  "name": "query - 12"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resourcechanges\r\n| extend changeTime = todatetime(properties.changeAttributes.timestamp), targetResourceId = tostring(properties.targetResourceId),\r\nchangeType = tostring(properties.changeType), correlationId = properties.changeAttributes.correlationId\r\n| where changeType == \"Delete\"\r\n| order by changeTime desc\r\n| project changeTime, resourceGroup, targetResourceId, changeType, correlationId",
                    "size": 0,
                    "title": "Resources deleted",
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "changeTime",
                          "formatter": 6
                        }
                      ]
                    }
                  },
                  "name": "query - 13"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SelectedTab",
              "comparison": "isEqualTo",
              "value": "RC_Monitoring"
            },
            "name": "RC_Monitoring"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "title": "Automation",
                    "expandable": true,
                    "expanded": true,
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type has 'microsoft.automation'\r\n\tor type has 'microsoft.logic'\r\n\tor type has 'microsoft.web/customapis'\r\n| extend type = case(\r\n\ttype =~ 'microsoft.automation/automationaccounts', 'Automation Accounts',\r\n\ttype == 'microsoft.web/serverfarms', \"App Service Plans\",\r\n\tkind == 'functionapp', \"Azure Functions\", \r\n\tkind == \"api\", \"API Apps\", \r\n\ttype == 'microsoft.web/sites', \"App Services\",\r\n\ttype =~ 'microsoft.web/connections', 'LogicApp Connectors',\r\n\ttype =~ 'microsoft.web/customapis','LogicApp API Connectors',\r\n\ttype =~ 'microsoft.logic/workflows','LogicApps',\r\n\ttype =~ 'microsoft.automation/automationaccounts/runbooks', 'Automation Runbooks',\r\n    type =~ 'microsoft.automation/automationaccounts/configurations', 'Automation Configurations',\r\nstrcat(\"Not Translated: \", type))\r\n| summarize count() by type\r\n| where type !has \"Not Translated\"",
                          "size": 3,
                          "title": "Count of all Resource Types",
                          "showExportToExcel": true,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "visualization": "tiles",
                          "tileSettings": {
                            "showBorder": false,
                            "titleContent": {
                              "columnMatch": "type",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "count_",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "auto"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            }
                          }
                        },
                        "name": "Count of all Resource Types"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type has 'microsoft.automation'\r\n\t or type has 'microsoft.logic'\r\n\t or type has 'microsoft.web/customapis'\r\n| extend type = case(\r\n\ttype =~ 'microsoft.automation/automationaccounts', 'Automation Accounts',\r\n\ttype =~ 'microsoft.web/connections', 'LogicApp Connectors',\r\n\ttype =~ 'microsoft.web/customapis','LogicApp API Connectors',\r\n\ttype =~ 'microsoft.logic/workflows','LogicApps',\r\n\ttype =~ 'microsoft.automation/automationaccounts/runbooks', 'Automation Runbooks',\r\n\ttype =~ 'microsoft.automation/automationaccounts/configurations', 'Automation Configurations',\r\n\tstrcat(\"Not Translated: \", type))\r\n| extend RunbookType = tostring(properties.runbookType)\r\n| extend LogicAppTrigger = properties.definition.triggers\r\n| extend LogicAppTrigger = iif(type =~ 'LogicApps', case(\r\n\tLogicAppTrigger has 'manual', tostring(LogicAppTrigger.manual.type),\r\n\tLogicAppTrigger has 'Recurrence', tostring(LogicAppTrigger.Recurrence.type),\r\n\tstrcat(\"Unknown Trigger type\", LogicAppTrigger)), LogicAppTrigger)\r\n| extend State = case(\r\n\ttype =~ 'Automation Runbooks', properties.state, \r\n\ttype =~ 'LogicApps', properties.state,\r\n\ttype =~ 'Automation Accounts', properties.state,\r\n\ttype =~ 'Automation Configurations', properties.state,\r\n\t' ')\r\n| extend CreatedDate = case(\r\n\ttype =~ 'Automation Runbooks', properties.creationTime, \r\n\ttype =~ 'LogicApps', properties.createdTime,\r\n\ttype =~ 'Automation Accounts', properties.creationTime,\r\n\ttype =~ 'Automation Configurations', properties.creationTime,\r\n\t' ')\r\n| extend LastModified = case(\r\n\ttype =~ 'Automation Runbooks', properties.lastModifiedTime, \r\n\ttype =~ 'LogicApps', properties.changedTime,\r\n\ttype =~ 'Automation Accounts', properties.lastModifiedTime,\r\n\ttype =~ 'Automation Configurations', properties.lastModifiedTime,\r\n\t' ')\r\n| extend Details = pack_all()\r\n| project Resource=id, subscriptionId, type, resourceGroup, RunbookType, LogicAppTrigger, State, Details",
                          "size": 1,
                          "title": "Details",
                          "noDataMessage": "No resources found",
                          "showExportToExcel": true,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "$gen_group",
                                "formatter": 13,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "Resource",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "subscriptionId",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Details",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "CellDetails",
                                  "linkLabel": "🔍 View Details",
                                  "linkIsContextBlade": true
                                }
                              }
                            ],
                            "rowLimit": 1000,
                            "filter": true,
                            "hierarchySettings": {
                              "treeType": 1,
                              "groupBy": [
                                "subscriptionId"
                              ],
                              "expandTopLevel": true,
                              "finalBy": "Resource"
                            }
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "type",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "count_",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "auto"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            },
                            "showBorder": true,
                            "sortCriteriaField": "type",
                            "sortOrderField": 1
                          }
                        },
                        "name": "query - PaaS - Automation Detailed",
                        "styleSettings": {
                          "padding": "0 0 200px 0"
                        }
                      }
                    ]
                  },
                  "name": "Group - Automation",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "title": "App Services",
                    "expandable": true,
                    "expanded": true,
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type has 'microsoft.web'\r\n\t or type =~ 'microsoft.apimanagement/service'\r\n\t or type =~ 'microsoft.network/frontdoors'\r\n\t or type =~ 'microsoft.network/applicationgateways'\r\n\t or type =~ 'microsoft.appconfiguration/configurationstores'\r\n| extend type = case(\r\n\ttype == 'microsoft.web/serverfarms', \"App Service Plans\",\r\n\tkind == 'functionapp', \"Azure Functions\", \r\n\tkind == \"api\", \"API Apps\", \r\n\ttype == 'microsoft.web/sites', \"App Services\",\r\n\ttype =~ 'microsoft.network/applicationgateways', 'App Gateways',\r\n\ttype =~ 'microsoft.network/frontdoors', 'Front Door',\r\n\ttype =~ 'microsoft.apimanagement/service', 'API Management',\r\n\ttype =~ 'microsoft.web/certificates', 'App Certificates',\r\n\ttype =~ 'microsoft.appconfiguration/configurationstores', 'App Config Stores',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| summarize count() by type",
                          "size": 3,
                          "noDataMessage": "No resources found",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "visualization": "tiles",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "$gen_group",
                                "formatter": 13,
                                "formatOptions": {
                                  "linkTarget": null,
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "Resource",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "subscriptionId",
                                "formatter": 5
                              }
                            ],
                            "hierarchySettings": {
                              "treeType": 1,
                              "groupBy": [
                                "subscriptionId"
                              ],
                              "expandTopLevel": true,
                              "finalBy": "Resource"
                            }
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "type",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "count_",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "auto"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            },
                            "showBorder": true,
                            "sortCriteriaField": "type",
                            "sortOrderField": 1
                          }
                        },
                        "name": "query - PaaS - Apps Overview"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources\r\n| where type has 'microsoft.web'\r\n\t or type =~ 'microsoft.apimanagement/service'\r\n\t or type =~ 'microsoft.network/frontdoors'\r\n\t or type =~ 'microsoft.network/applicationgateways'\r\n\t or type =~ 'microsoft.appconfiguration/configurationstores'\r\n| extend type = case(\r\n\ttype == 'microsoft.web/serverfarms', \"App Service Plans\",\r\n\tkind == 'functionapp', \"Azure Functions\", \r\n\tkind == \"api\", \"API Apps\", \r\n\ttype == 'microsoft.web/sites', \"App Services\",\r\n\ttype =~ 'microsoft.network/applicationgateways', 'App Gateways',\r\n\ttype =~ 'microsoft.network/frontdoors', 'Front Door',\r\n\ttype =~ 'microsoft.apimanagement/service', 'API Management',\r\n\ttype =~ 'microsoft.web/certificates', 'App Certificates',\r\n\ttype =~ 'microsoft.appconfiguration/configurationstores', 'App Config Stores',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| extend Sku = case(\r\n\ttype =~ 'App Gateways', properties.sku.name, \r\n\ttype =~ 'Azure Functions', properties.sku,\r\n\ttype =~ 'API Management', sku.name,\r\n\ttype =~ 'App Service Plans', sku.name,\r\n\ttype =~ 'App Services', properties.sku,\r\n\ttype =~ 'App Config Stores', sku.name,\r\n\t' ')\r\n| extend State = case(\r\n\ttype =~ 'App Config Stores', properties.provisioningState,\r\n\ttype =~ 'App Service Plans', properties.status,\r\n\ttype =~ 'Azure Functions', properties.state,\r\n\ttype =~ 'App Services', properties.state,\r\n\ttype =~ 'API Management', properties.provisioningState,\r\n\ttype =~ 'App Gateways', properties.provisioningState,\r\n\ttype =~ 'Front Door', properties.provisioningState,\r\n\t' ')\r\n| mv-expand publicIpId = properties.frontendIPConfigurations\r\n| mv-expand publicIpId = publicIpId.properties.publicIPAddress.id\r\n| extend publicIpId = tostring(publicIpId)\r\n\t| join kind=leftouter(\r\n\t  \tResources\r\n  \t\t| where type =~ 'microsoft.network/publicipaddresses'\r\n  \t\t| project publicIpId = id, publicIpAddress = tostring(properties.ipAddress)) on publicIpId\r\n| extend PublicIP = case(\r\n\ttype =~ 'API Management', properties.publicIPAddresses,\r\n\ttype =~ 'App Gateways', publicIpAddress,\r\n    type =~ 'App Services', properties.inboundIpAddress,\r\n    type =~ 'Azure Functions', properties.inboundIpAddress,\r\n\t' ')\r\n| extend Instances = case(\r\n\ttype =~ 'API Management', sku.capacity,\r\n    type =~ 'App Services', properties.siteConfig.numberOfWorkers,\r\n    type =~ 'Azure Functions', properties.siteConfig.numberOfWorkers,\r\n    type =~ 'App Service Plans', properties.currentNumberOfWorkers,\r\n\t' ')\r\n| extend ServicePlan = case(\r\n    type =~ 'App Services', properties.serverFarmId,\r\n    type =~ 'Azure Functions', properties.serverFarmId,\r\n\t' ')\r\n| extend Details = pack_all()\r\n| project Resource=id, type, subscriptionId, Sku, State, PublicIP, Instances, ServicePlan, Details",
                          "size": 1,
                          "noDataMessage": "No resources found",
                          "showExportToExcel": true,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "$gen_group",
                                "formatter": 13,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "Resource",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "subscriptionId",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Details",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "CellDetails",
                                  "linkLabel": "🔍 View Details",
                                  "linkIsContextBlade": true
                                }
                              }
                            ],
                            "rowLimit": 1000,
                            "filter": true,
                            "hierarchySettings": {
                              "treeType": 1,
                              "groupBy": [
                                "subscriptionId"
                              ],
                              "expandTopLevel": true,
                              "finalBy": "Resource"
                            }
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "type",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "count_",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "auto"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            },
                            "showBorder": true,
                            "sortCriteriaField": "type",
                            "sortOrderField": 1
                          }
                        },
                        "name": "query - PaaS - Apps Detailed",
                        "styleSettings": {
                          "padding": "0 0 200px 0"
                        }
                      }
                    ]
                  },
                  "name": "Group - App Services",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "title": "Data",
                    "expandable": true,
                    "expanded": true,
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources \r\n| where type =~ 'microsoft.documentdb/databaseaccounts'\r\n\tor type =~ 'microsoft.sql/servers/databases'\r\n\tor type =~ 'microsoft.dbformysql/servers'\r\n\tor type =~ 'microsoft.sql/servers'\r\n    or type =~ 'Microsoft.DBforPostgreSQL/servers'\r\n    or type =~ 'Microsoft.DBforMariaDB/servers'\r\n    or type =~ 'microsoft.dbforpostgresql/flexibleservers'\r\n| extend type = case(\r\n\ttype =~ 'microsoft.documentdb/databaseaccounts', 'CosmosDB',\r\n\ttype =~ 'microsoft.sql/servers/databases', 'SQL DBs',\r\n\ttype =~ 'microsoft.dbformysql/servers', 'MySQL Servers',\r\n\ttype =~ 'microsoft.sql/servers', 'SQL Servers',\r\n    type =~ 'Microsoft.DBforPostgreSQL/servers', 'PostgreSQL Servers',\r\n    type =~ 'microsoft.dbforpostgresql/flexibleservers', 'PostgreSQL Flexi Servers',\r\n    type =~ 'Microsoft.DBforMariaDB/servers', 'MariaDB Servers',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| summarize count() by type",
                          "size": 3,
                          "noDataMessage": "No resources found",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "visualization": "tiles",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "$gen_group",
                                "formatter": 13,
                                "formatOptions": {
                                  "linkTarget": null,
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "Resource",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "subscriptionId",
                                "formatter": 5
                              }
                            ],
                            "hierarchySettings": {
                              "treeType": 1,
                              "groupBy": [
                                "subscriptionId"
                              ],
                              "expandTopLevel": true,
                              "finalBy": "Resource"
                            }
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "type",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "count_",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "auto"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            },
                            "showBorder": true,
                            "sortCriteriaField": "type",
                            "sortOrderField": 1
                          }
                        },
                        "name": "query - PaaS - Data Overview"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "// data\r\n// Click the \"Run query\" command above to execute the query and see results.\r\nresources \r\n| where type =~ 'microsoft.documentdb/databaseaccounts'\r\n\tor type =~ 'microsoft.sql/servers/databases'\r\n\tor type =~ 'microsoft.dbformysql/servers'\r\n\tor type =~ 'microsoft.sql/servers'\r\n    or type =~ 'Microsoft.DBforPostgreSQL/servers'\r\n    or type =~ 'Microsoft.DBforMariaDB/servers'\r\n    or type =~ 'microsoft.dbforpostgresql/flexibleservers'\r\n| extend type = case(\r\n\ttype =~ 'microsoft.documentdb/databaseaccounts', 'CosmosDB',\r\n\ttype =~ 'microsoft.sql/servers/databases', 'SQL DBs',\r\n\ttype =~ 'microsoft.dbformysql/servers', 'MySQL Servers',\r\n\ttype =~ 'microsoft.sql/servers', 'SQL Servers',\r\n    type =~ 'Microsoft.DBforPostgreSQL/servers', 'PostgreSQL Servers',\r\n    type =~ 'microsoft.dbforpostgresql/flexibleservers', 'PostgreSQL Flexi Servers',\r\n    type =~ 'Microsoft.DBforMariaDB/servers', 'MariaDB Servers',\r\n\tstrcat(\"Not Translated: \", type))\r\n| extend Sku = case(\r\n\ttype =~ 'CosmosDB', properties.databaseAccountOfferType,\r\n\ttype =~ 'SQL DBs', sku.name,\r\n\ttype =~ 'MySQL Servers', sku.name,\r\n    type =~ 'PostgreSQL Servers', sku.name,\r\n    type =~ 'PostgreSQL Flexi Servers', sku.name,\r\n    type =~ 'MariaDB Servers', sku.name,\r\n\t' ')\r\n| extend Status = case(\r\n\ttype =~ 'CosmosDB', properties.provisioningState,\r\n\ttype =~ 'SQL DBs', properties.status,\r\n    type =~ 'SQL Servers', properties.state,\r\n\ttype =~ 'MySQL Servers', properties.userVisibleState,\r\n    type =~ 'PostgreSQL Servers', properties.state,\r\n    type =~ 'PostgreSQL Flexi Servers', properties.state,\r\n    type =~ 'MariaDB Servers', properties.userVisibleState,\r\n\t' ')\r\n| extend Endpoint = case(\r\n\ttype =~ 'MySQL Servers', properties.fullyQualifiedDomainName,\r\n\ttype =~ 'SQL Servers', properties.fullyQualifiedDomainName,\r\n\ttype =~ 'CosmosDB', properties.documentEndpoint,\r\n    type =~ 'PostgreSQL Servers', properties.fullyQualifiedDomainName,\r\n    type =~ 'PostgreSQL Flexi Servers', properties.fullyQualifiedDomainName,\r\n    type =~ 'MariaDB Servers', properties.fullyQualifiedDomainName,\r\n\t' ')\r\n| extend PublicNetworkAccess = case(\r\n\ttype =~ 'MySQL Servers', properties.publicNetworkAccess,\r\n\ttype =~ 'SQL Servers', properties.publicNetworkAccess,\r\n    type =~ 'PostgreSQL Servers', properties.publicNetworkAccess,\r\n    type =~ 'PostgreSQL Flexi Servers', properties.publicNetworkAccess,\r\n    type =~ 'MariaDB Servers', properties.publicNetworkAccess,\r\n\t' ')\r\n| extend Version = case(\r\n\ttype =~ 'MySQL Servers', properties.version,\r\n\ttype =~ 'SQL Servers', properties.version,\r\n    type =~ 'PostgreSQL Servers', properties.version,\r\n    type =~ 'PostgreSQL Flexi Servers', properties.version,\r\n    type =~ 'MariaDB Servers', properties.version,\r\n\t' ')\r\n| extend maxSizeGB = todouble(case(\r\n\ttype =~ 'SQL DBs', properties.maxSizeBytes,\r\n\ttype =~ 'MySQL Servers', properties.storageProfile.storageMB,\r\n    type =~ 'PostgreSQL Servers', properties.storageProfile.storageMB,\r\n    type =~ 'PostgreSQL Flexi Servers', properties.storageProfile.storageMB,\r\n    type =~ 'MariaDB Servers', properties.storageProfile.storageMB,\r\n\t' '))\r\n| extend maxSizeGB = iif(type has 'SQL DBs', maxSizeGB /1000 /1000, maxSizeGB)\r\n| extend Details = pack_all()\r\n| project Resource=id, resourceGroup, subscriptionId, type, Sku, Status, Endpoint, Version, PublicNetworkAccess, maxSizeGB, Details\r\n\r\n",
                          "size": 1,
                          "title": "Details",
                          "noDataMessage": "No resources found",
                          "showExportToExcel": true,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "$gen_group",
                                "formatter": 13,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "Resource",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "subscriptionId",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "maxSizeGB",
                                "formatter": 0,
                                "numberFormat": {
                                  "unit": 4,
                                  "options": {
                                    "style": "decimal",
                                    "useGrouping": false
                                  }
                                }
                              },
                              {
                                "columnMatch": "Details",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "CellDetails",
                                  "linkLabel": "🔍 View Details",
                                  "linkIsContextBlade": true
                                }
                              }
                            ],
                            "rowLimit": 1000,
                            "hierarchySettings": {
                              "treeType": 1,
                              "groupBy": [
                                "subscriptionId"
                              ],
                              "expandTopLevel": true,
                              "finalBy": "Resource"
                            }
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "type",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "count_",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "auto"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            },
                            "showBorder": true,
                            "sortCriteriaField": "type",
                            "sortOrderField": 1
                          }
                        },
                        "name": "query - PaaS - Data Detailed",
                        "styleSettings": {
                          "padding": "0 0 200px 0"
                        }
                      }
                    ]
                  },
                  "name": "Data",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "title": "Storage & Backup",
                    "expandable": true,
                    "expanded": true,
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources \r\n| where type =~ 'microsoft.storagesync/storagesyncservices'\r\n\tor type =~ 'microsoft.recoveryservices/vaults'\r\n\tor type =~ 'microsoft.storage/storageaccounts'\r\n\tor type =~ 'microsoft.keyvault/vaults'\r\n| extend type = case(\r\n\ttype =~ 'microsoft.storagesync/storagesyncservices', 'Azure File Sync',\r\n\ttype =~ 'microsoft.recoveryservices/vaults', 'Azure Backup',\r\n\ttype =~ 'microsoft.storage/storageaccounts', 'Storage Accounts',\r\n\ttype =~ 'microsoft.keyvault/vaults', 'Key Vaults',\r\n\tstrcat(\"Not Translated: \", type))\r\n| where type !has \"Not Translated\"\r\n| summarize count() by type",
                          "size": 3,
                          "noDataMessage": "No resources found",
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "visualization": "tiles",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "$gen_group",
                                "formatter": 13,
                                "formatOptions": {
                                  "linkTarget": null,
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "Resource",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "subscriptionId",
                                "formatter": 5
                              }
                            ],
                            "hierarchySettings": {
                              "treeType": 1,
                              "groupBy": [
                                "subscriptionId"
                              ],
                              "expandTopLevel": true,
                              "finalBy": "Resource"
                            }
                          },
                          "tileSettings": {
                            "titleContent": {
                              "columnMatch": "type",
                              "formatter": 1
                            },
                            "leftContent": {
                              "columnMatch": "count_",
                              "formatter": 12,
                              "formatOptions": {
                                "palette": "auto"
                              },
                              "numberFormat": {
                                "unit": 17,
                                "options": {
                                  "maximumSignificantDigits": 3,
                                  "maximumFractionDigits": 2
                                }
                              }
                            },
                            "showBorder": true,
                            "sortCriteriaField": "type",
                            "sortOrderField": 1
                          }
                        },
                        "name": "query - PaaS - Data Overview "
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "resources \r\n| where type =~ 'microsoft.storagesync/storagesyncservices'\r\n\tor type =~ 'microsoft.recoveryservices/vaults'\r\n\tor type =~ 'microsoft.storage/storageaccounts'\r\n\tor type =~ 'microsoft.keyvault/vaults'\r\n| extend type = case(\r\n\ttype =~ 'microsoft.storagesync/storagesyncservices', 'Azure File Sync',\r\n\ttype =~ 'microsoft.recoveryservices/vaults', 'Azure Backup',\r\n\ttype =~ 'microsoft.storage/storageaccounts', 'Storage Accounts',\r\n\ttype =~ 'microsoft.keyvault/vaults', 'Key Vaults',\r\n\tstrcat(\"Not Translated: \", type))\r\n| extend Sku = case(\r\n\ttype !has 'Key Vaults', sku.name,\r\n\ttype =~ 'Key Vaults', properties.sku.name,\r\n\t' ')\r\n| extend Details = pack_all()\r\n| project Resource=id, type, kind, subscriptionId, resourceGroup, Sku, Details",
                          "size": 1,
                          "noDataMessage": "No resources found",
                          "showExportToExcel": true,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "$gen_group",
                                "formatter": 13,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "Resource",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "subscriptionId",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Details",
                                "formatter": 7,
                                "formatOptions": {
                                  "linkTarget": "CellDetails",
                                  "linkLabel": "🔍 View Details",
                                  "linkIsContextBlade": true
                                }
                              }
                            ],
                            "rowLimit": 1000,
                            "filter": true,
                            "hierarchySettings": {
                              "treeType": 1,
                              "groupBy": [
                                "subscriptionId"
                              ],
                              "expandTopLevel": true,
                              "finalBy": "Resource"
                            }
                          }
                        },
                        "name": "query - PaaS - Data Detailed",
                        "styleSettings": {
                          "padding": "0 0 200px 0"
                        }
                      }
                    ]
                  },
                  "name": "group - Storage & Backup",
                  "styleSettings": {
                    "showBorder": true
                  }
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SelectedTab",
              "comparison": "isEqualTo",
              "value": "RC_PaaS"
            },
            "name": "RC_PaaS"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "d1f42f81-eb8f-4653-a0ff-38564d7487b4",
                        "version": "KqlParameterItem/1.0",
                        "name": "Subscriptions",
                        "type": 6,
                        "description": "Subscriptions to filter the list of workspaces",
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "value": [
                          "value::all"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "includeAll": false,
                          "selectAllValue": ""
                        },
                        "label": "Workspace Subscription"
                      },
                      {
                        "id": "2373a24f-ad32-4909-a7f6-59b373dcde6c",
                        "version": "KqlParameterItem/1.0",
                        "name": "Workspaces",
                        "type": 5,
                        "description": "LA Workspaces configured in vault diagnostic settings",
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "where type =~ 'microsoft.operationalinsights/workspaces' | project id",
                        "crossComponentResources": [
                          "{Subscriptions}"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "showDefault": false
                        },
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources",
                        "value": [
                          "value::all"
                        ],
                        "label": "Workspace"
                      }
                    ],
                    "style": "above",
                    "doNotRunWhenHidden": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "customWidth": "100",
                  "name": "Filters1"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "_____________________"
                  },
                  "name": "Line1"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "## Backup job history"
                  },
                  "conditionalVisibility": {
                    "parameterName": "Workspaces",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "Heading2"
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Workspaces}"
                    ],
                    "parameters": [
                      {
                        "id": "2965ad33-1401-47c9-8f4b-9b7126f87014",
                        "version": "KqlParameterItem/1.0",
                        "name": "TimeRange",
                        "label": "Time Range",
                        "type": 4,
                        "description": "Period of time for which reports should be viewed",
                        "isRequired": true,
                        "typeSettings": {
                          "selectableValues": [
                            {
                              "durationMs": 259200000
                            },
                            {
                              "durationMs": 604800000
                            },
                            {
                              "durationMs": 1209600000
                            },
                            {
                              "durationMs": 2419200000
                            },
                            {
                              "durationMs": 2592000000
                            },
                            {
                              "durationMs": 5184000000
                            },
                            {
                              "durationMs": 7776000000
                            }
                          ],
                          "allowCustom": true
                        },
                        "value": {
                          "durationMs": 604800000
                        }
                      },
                      {
                        "id": "efede5fa-f577-4766-b9b6-6ba4e525f844",
                        "version": "KqlParameterItem/1.0",
                        "name": "DataSourceSubscription",
                        "label": "Datasource  Subscription",
                        "type": 6,
                        "description": "Use to filter for datasources within a specific subscription",
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "",
                        "delimiter": ",",
                        "query": "let RangeStart = startofday({TimeRange:start});\r\nlet RangeEnd = iff(startofday({TimeRange:end}) == startofday(now()) ,startofday({TimeRange:end}) - 1d , startofday({TimeRange:end}));\r\nlet VaultSubscriptionList = \"*\";\r\nlet VaultLocationList = \"*\";\r\nlet VaultList = \"*\";\r\nlet VaultTypeList = \"*\";\r\nlet ExcludeLegacyEvent = true;\r\nlet BackupSolutionList = \"*\";\r\nlet ProtectionInfoList = \"*\";\r\nlet Item_search =  \"*;*\";\r\nlet ItemArray = split(Item_search, \";\");\r\nlet ItemArray_length = array_length(ItemArray);\r\nlet BackupInstanceName = iff(ItemArray_length == 2, ItemArray[1], ItemArray[0] );\r\nlet DatasourceSetName = iff(ItemArray_length == 2, ItemArray[0], \"\");\r\nlet DisplayAllFields = false;\r\n_AzureBackup_GetBackupInstances(RangeStart, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, ProtectionInfoList, DatasourceSetName, BackupInstanceName, DisplayAllFields)\r\n| distinct tostring(split(tostring(todynamic(DatasourceResourceId)),\"/\")[2])",
                        "crossComponentResources": [
                          "{Workspaces}"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "selectAllValue": "*",
                          "showDefault": false
                        },
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "value": [
                          "value::all"
                        ]
                      },
                      {
                        "id": "256c7e33-df90-4956-aaf3-699aeaad912f",
                        "version": "KqlParameterItem/1.0",
                        "name": "DataSourceLocation",
                        "label": "Datasource Location",
                        "type": 2,
                        "description": "Use to filter for datasources within a specific location",
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "",
                        "delimiter": ",",
                        "query": "let RangeStart = startofday({TimeRange:start});\r\nlet RangeEnd = iff(startofday({TimeRange:end}) == startofday(now()) ,startofday({TimeRange:end}) - 1d , startofday({TimeRange:end}));\r\nlet VaultSubscriptionList = todynamic( replace(\"/subscriptions/\", \"\", @\"{DataSourceSubscription}\"));\r\nlet VaultLocationList = \"*\";\r\nlet VaultList = \"*\";\r\nlet VaultTypeList = \"*\";\r\nlet ExcludeLegacyEvent = true;\r\nlet BackupSolutionList = \"*\";\r\nlet ProtectionInfoList = \"*\";\r\nlet Item_search =  \"*;*\";\r\nlet ItemArray = split(Item_search, \";\");\r\nlet ItemArray_length = array_length(ItemArray);\r\nlet BackupInstanceName = iff(ItemArray_length == 2, ItemArray[1], ItemArray[0] );\r\nlet DatasourceSetName = iff(ItemArray_length == 2, ItemArray[0], \"\");\r\nlet DisplayAllFields = false;\r\n_AzureBackup_GetBackupInstances(RangeStart, RangeEnd, VaultSubscriptionList, VaultLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, ProtectionInfoList, DatasourceSetName, BackupInstanceName, DisplayAllFields)\r\n| distinct VaultLocation",
                        "crossComponentResources": [
                          "{Workspaces}"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "selectAllValue": "*",
                          "showDefault": false
                        },
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "value": [
                          "value::all"
                        ]
                      },
                      {
                        "id": "16ad110f-4ea3-44d6-826b-4ea3bbd68c93",
                        "version": "KqlParameterItem/1.0",
                        "name": "JobOperation",
                        "label": "Job Operation",
                        "type": 2,
                        "description": "Use to filter for a particular operation type",
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "",
                        "delimiter": ",",
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "selectAllValue": "*",
                          "showDefault": false
                        },
                        "jsonData": "\r\n[    \r\n{ \"value\": \"Backup\", \t\t\t\t\t\t\"label\": \"Backup\" },\r\n{ \"value\": \"Restore\", \t\t\t\t\t\t\"label\": \"Restore\" }\r\n]",
                        "value": [
                          "value::all"
                        ]
                      },
                      {
                        "id": "6a6222bf-a28a-4c98-9d74-838e74497167",
                        "version": "KqlParameterItem/1.0",
                        "name": "JobStatus",
                        "label": "Job Status",
                        "type": 2,
                        "description": "Use to filter for a particular job status",
                        "isRequired": true,
                        "multiSelect": true,
                        "quote": "",
                        "delimiter": ",",
                        "typeSettings": {
                          "additionalResourceOptions": [
                            "value::all"
                          ],
                          "selectAllValue": "*",
                          "showDefault": false
                        },
                        "jsonData": "\r\n[    \r\n{ \"value\": \"Completed\", \t\t\t\t\t\t\"label\": \"Completed\" },\r\n{ \"value\": \"Failed\", \t\t\t\"label\": \"Failed\" },\r\n\r\n{ \"value\": \"CompletedWithWarnings\", \t\t\t\t\t\t\"label\": \"CompletedWithWarnings\" },\r\n{ \"value\": \"Cancelled\", \"label\": \"Cancelled\" }\r\n]",
                        "value": [
                          "value::all"
                        ]
                      },
                      {
                        "id": "849a6401-cbaf-44b9-a733-0819f8923791",
                        "version": "KqlParameterItem/1.0",
                        "name": "SearchItem",
                        "label": "Search Item",
                        "type": 1,
                        "description": "Use to search for an item by name"
                      }
                    ],
                    "style": "above",
                    "doNotRunWhenHidden": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "customWidth": "100",
                  "conditionalVisibility": {
                    "parameterName": "Workspaces",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "Filters2"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "\r\nlet RangeStart = startofday({TimeRange:start});\r\nlet RangeEnd = iff(startofday({TimeRange:end}) == startofday(now()) ,startofday({TimeRange:end}) - 1d , startofday({TimeRange:end}));\r\nlet DataSourceSubscriptionList = todynamic( replace(\"/subscriptions/\", \"\", @\"{DataSourceSubscription}\"));\r\nlet DataSourceLocationList = todynamic( @\"{DataSourceLocation}\"); \r\nlet VaultTypeList = \"*\";\r\nlet VaultList = \"*\";\r\nlet ExcludeLegacyEvent = true;\r\nlet BackupSolutionList = \"*\";\r\nlet ProtectionInfoList = \"*\";\r\nlet Item_search =  \"*;*\";\r\nlet ItemArray = split(Item_search, \";\");\r\nlet ItemArray_length = array_length(ItemArray);\r\nlet BackupInstanceName = iff(ItemArray_length == 2, ItemArray[1], ItemArray[0] );\r\nlet DatasourceSetName = iff(ItemArray_length == 2, ItemArray[0], \"\");\r\nlet JobOperationList = todynamic( @\"{JobOperation}\"); \r\nlet JobStatusList = todynamic( @\"{JobStatus}\");\r\nlet JobFailureCodeList = \"*\";\r\nlet ExcludeLog = true; \r\n_AzureBackup_GetJobs(RangeStart, RangeEnd, DataSourceSubscriptionList, DataSourceLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, JobOperationList, JobStatusList, JobFailureCodeList, DatasourceSetName, BackupInstanceName, ExcludeLog)\r\n| where BackupInstanceFriendlyName contains iff(isnotempty('{SearchItem}'),'{SearchItem}',BackupInstanceFriendlyName)\r\n| sort by BackupInstanceId\r\n| summarize count() by Status",
                    "size": 3,
                    "title": "Jobs by Status",
                    "noDataMessage": "No record found for the selected time and scope.",
                    "showRefreshButton": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspaces}"
                    ],
                    "visualization": "piechart",
                    "tileSettings": {
                      "showBorder": false,
                      "titleContent": {
                        "columnMatch": "UniqueId",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "DurationInSecs",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    }
                  },
                  "customWidth": "0",
                  "conditionalVisibility": {
                    "parameterName": "Workspaces",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "Chart1",
                  "styleSettings": {
                    "showBorder": true
                  }
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "crossComponentResources": [
                      "{Workspaces}"
                    ],
                    "parameters": [
                      {
                        "id": "7a64467f-eec7-495b-9099-233fb7bceb08",
                        "version": "KqlParameterItem/1.0",
                        "name": "RowsPerPage",
                        "label": "Rows Per Page",
                        "type": 2,
                        "description": "Number of rows to display in a single page",
                        "typeSettings": {
                          "additionalResourceOptions": [],
                          "showDefault": false
                        },
                        "jsonData": "[\r\n    { \"value\":10, \"label\":\"10\", \"selected\":true  },\r\n    { \"value\":25, \"label\":\"25\" },\r\n    { \"value\":50, \"label\":\"50\" },\r\n    { \"value\":100, \"label\":\"100\" },\r\n    { \"value\":250, \"label\":\"250\" },\r\n    { \"value\":500, \"label\":\"500\" },\r\n    { \"value\":1000, \"label\":\"1000\" }\r\n]"
                      },
                      {
                        "id": "5c65bc61-a721-42b7-960b-3fe7a6170eb6",
                        "version": "KqlParameterItem/1.0",
                        "name": "Page",
                        "type": 2,
                        "description": "Page number",
                        "isRequired": true,
                        "query": "\r\nlet RangeStart = startofday({TimeRange:start});\r\nlet RangeEnd = iff(startofday({TimeRange:end}) == startofday(now()) ,startofday({TimeRange:end}) - 1d , startofday({TimeRange:end}));\r\nlet DataSourceSubscriptionList = todynamic( replace(\"/subscriptions/\", \"\", @\"{DataSourceSubscription}\"));\r\nlet DataSourceLocationList = todynamic( @\"{DataSourceLocation}\"); \r\nlet VaultTypeList = \"*\";\r\nlet VaultList = \"*\";\r\nlet ExcludeLegacyEvent = true;\r\nlet BackupSolutionList = \"*\";\r\nlet ProtectionInfoList = \"*\";\r\nlet Item_search =  \"*;*\";\r\nlet ItemArray = split(Item_search, \";\");\r\nlet ItemArray_length = array_length(ItemArray);\r\nlet BackupInstanceName = iff(ItemArray_length == 2, ItemArray[1], ItemArray[0] );\r\nlet DatasourceSetName = iff(ItemArray_length == 2, ItemArray[0], \"\");\r\nlet JobOperationList = todynamic( @\"{JobOperation}\"); \r\nlet JobStatusList = todynamic( @\"{JobStatus}\");\r\nlet JobFailureCodeList = \"*\";\r\nlet ExcludeLog = true; \r\nlet backupItem = '{SearchItem}';\r\n_AzureBackup_GetJobs(RangeStart, RangeEnd, DataSourceSubscriptionList, DataSourceLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, JobOperationList, JobStatusList, JobFailureCodeList, DatasourceSetName, BackupInstanceName, ExcludeLog)\r\n| where BackupInstanceFriendlyName contains backupItem\r\n| summarize c=count()\r\n| project num = (c-1)/toint('{RowsPerPage}') + 1\r\n| project nums = range(1,num,1), num\r\n| mvexpand nums\r\n| project nums = tostring(nums), num = strcat(tostring(nums),\" of \",tostring(num))\r\n\r\n",
                        "crossComponentResources": [
                          "{Workspaces}"
                        ],
                        "typeSettings": {
                          "additionalResourceOptions": [],
                          "showDefault": false
                        },
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "value": "1"
                      }
                    ],
                    "style": "above",
                    "doNotRunWhenHidden": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "customWidth": "100",
                  "conditionalVisibility": {
                    "parameterName": "Workspaces",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "Filters3"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "\r\nlet RangeStart = startofday({TimeRange:start});\r\nlet RangeEnd = iff(startofday({TimeRange:end}) == startofday(now()) ,startofday({TimeRange:end}) - 1d , startofday({TimeRange:end}));\r\nlet DataSourceSubscriptionList = todynamic( replace(\"/subscriptions/\", \"\", @\"{DataSourceSubscription}\"));\r\nlet DataSourceLocationList = todynamic( @\"{DataSourceLocation}\"); \r\nlet VaultTypeList = \"*\";\r\nlet VaultList = \"*\";\r\nlet ExcludeLegacyEvent = true;\r\nlet BackupSolutionList = \"*\";\r\nlet ProtectionInfoList = \"*\";\r\nlet Item_search =  \"*;*\";\r\nlet ItemArray = split(Item_search, \";\");\r\nlet ItemArray_length = array_length(ItemArray);\r\nlet BackupInstanceName = iff(ItemArray_length == 2, ItemArray[1], ItemArray[0] );\r\nlet DatasourceSetName = iff(ItemArray_length == 2, ItemArray[0], \"\");\r\nlet JobOperationList = todynamic( @\"{JobOperation}\"); \r\nlet JobStatusList = todynamic( @\"{JobStatus}\");\r\nlet JobFailureCodeList = \"*\";\r\nlet ExcludeLog = true; \r\nlet backupItem = '{SearchItem}';\r\n_AzureBackup_GetJobs(RangeStart, RangeEnd, DataSourceSubscriptionList, DataSourceLocationList, VaultList, VaultTypeList, ExcludeLegacyEvent, BackupSolutionList, JobOperationList, JobStatusList, JobFailureCodeList, DatasourceSetName, BackupInstanceName, ExcludeLog)\r\n| where BackupInstanceFriendlyName contains iff(isnotempty('{SearchItem}'),'{SearchItem}',BackupInstanceFriendlyName)\r\n| sort by BackupInstanceId\r\n| extend row_num = row_number()\r\n| extend page_num = tostring(((row_num-1)/toint('{RowsPerPage}') + 1))\r\n| where page_num has ('{Page}')\r\n| project BackupItem = BackupInstanceId,BackupItemFriendlyName = BackupInstanceFriendlyName ,Vault = VaultResourceId,Subscription = VaultSubscriptionId, VaultLocation = VaultLocation,JobOperation = OperationCategory,JobStartTime = StartTime,JobDuration = tostring(todouble(DurationInSecs)/60/60),JobStatus = Status,FailureCode = ErrorTitle\r\n",
                    "size": 3,
                    "title": "List of jobs in period",
                    "noDataMessage": "No record found for the selected time and scope.",
                    "showRefreshButton": true,
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": [
                      "{Workspaces}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "BackupItem",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "BackupItemFriendlyName",
                          "formatter": 16,
                          "formatOptions": {
                            "linkColumn": "BackupItem",
                            "linkTarget": "Resource",
                            "showIcon": true,
                            "customColumnWidthSetting": "10%"
                          }
                        },
                        {
                          "columnMatch": "Vault",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "10%"
                          }
                        },
                        {
                          "columnMatch": "Subscription",
                          "formatter": 15,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "showIcon": true,
                            "customColumnWidthSetting": "10%"
                          }
                        },
                        {
                          "columnMatch": "VaultLocation",
                          "formatter": 17,
                          "formatOptions": {
                            "customColumnWidthSetting": "10%"
                          }
                        },
                        {
                          "columnMatch": "JobOperation",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "10%"
                          }
                        },
                        {
                          "columnMatch": "JobStartTime",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "10%"
                          }
                        },
                        {
                          "columnMatch": "JobDuration",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "10%"
                          },
                          "numberFormat": {
                            "unit": 0,
                            "options": {
                              "style": "decimal",
                              "minimumFractionDigits": 2,
                              "maximumFractionDigits": 2
                            }
                          }
                        },
                        {
                          "columnMatch": "JobStatus",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "contains",
                                "thresholdValue": "Warning",
                                "representation": "2",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "contains",
                                "thresholdValue": "Failed",
                                "representation": "failed",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "Blank",
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "10%"
                          }
                        },
                        {
                          "columnMatch": "FailureCode",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "10%"
                          }
                        }
                      ],
                      "rowLimit": 1000,
                      "labelSettings": [
                        {
                          "columnId": "BackupItemFriendlyName",
                          "label": "Backup Instance"
                        },
                        {
                          "columnId": "Vault",
                          "label": "Vault"
                        },
                        {
                          "columnId": "Subscription",
                          "label": "Subscription"
                        },
                        {
                          "columnId": "VaultLocation",
                          "label": "Location"
                        },
                        {
                          "columnId": "JobOperation",
                          "label": "Job Operation"
                        },
                        {
                          "columnId": "JobStartTime",
                          "label": "Job Start Time (UTC)"
                        },
                        {
                          "columnId": "JobDuration",
                          "label": "Job Duration (Hours)"
                        },
                        {
                          "columnId": "JobStatus",
                          "label": "Job Status"
                        },
                        {
                          "columnId": "FailureCode",
                          "label": "Job Failure Code"
                        }
                      ]
                    },
                    "sortBy": []
                  },
                  "customWidth": "100",
                  "conditionalVisibility": {
                    "parameterName": "Workspaces",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "Grid1",
                  "styleSettings": {
                    "margin": "5px",
                    "padding": "5px",
                    "showBorder": true
                  }
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SelectedTab",
              "comparison": "isEqualTo",
              "value": "RC_Backup"
            },
            "name": "group - Backup"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "securityresources\r\n| where type == \"microsoft.security/securescores\"\r\n| extend subscriptionSecureScore = round(100 * bin((todouble(properties.score.current))/ todouble(properties.score.max), 0.001))\r\n| where subscriptionSecureScore > 0\r\n| project subscriptionSecureScore, subscriptionId\r\n| order by subscriptionSecureScore asc",
                    "size": 1,
                    "title": "Security Scores by Subscription",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "$gen_group",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": null,
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "subscriptionSecureScore",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "redGreen"
                          },
                          "numberFormat": {
                            "unit": 1,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false
                            }
                          }
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "subscriptionId"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "subscriptionSecureScore"
                      }
                    }
                  },
                  "name": "query - Monitor & Security - Security Scores"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "SecurityResources \r\n| where type == 'microsoft.security/securescores/securescorecontrols' \r\n| extend SecureControl = properties.displayName, unhealthy = properties.unhealthyResourceCount, currentscore = properties.score.current, maxscore = properties.score.max, subscriptionId\r\n| project SecureControl , unhealthy, currentscore, maxscore, subscriptionId",
                    "size": 3,
                    "title": "Security Scores by Control",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "$gen_group",
                          "formatter": 13,
                          "formatOptions": {
                            "linkTarget": null,
                            "showIcon": true,
                            "customColumnWidthSetting": "45ch"
                          }
                        },
                        {
                          "columnMatch": "SecureControl",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "unhealthy",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 0,
                            "palette": "greenRed"
                          }
                        },
                        {
                          "columnMatch": "currentscore",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "redGreen"
                          },
                          "numberFormat": {
                            "unit": 1,
                            "options": {
                              "style": "decimal"
                            }
                          }
                        },
                        {
                          "columnMatch": "maxscore",
                          "formatter": 8,
                          "formatOptions": {
                            "palette": "blue"
                          }
                        },
                        {
                          "columnMatch": "subscriptionId",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "subscriptionSecureScore",
                          "formatter": 8,
                          "formatOptions": {
                            "min": 0,
                            "max": 100,
                            "palette": "redGreen"
                          },
                          "numberFormat": {
                            "unit": 1,
                            "options": {
                              "style": "decimal",
                              "useGrouping": false
                            }
                          }
                        }
                      ],
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "subscriptionId"
                        ],
                        "expandTopLevel": true,
                        "finalBy": "SecureControl"
                      }
                    }
                  },
                  "name": "query - Monitor & Security - Security Scores by Control"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SelectedTab",
              "comparison": "isEqualTo",
              "value": "RC_Security"
            },
            "name": "group - Security"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "Consistency"
      },
      "name": "Resource Consistency"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// Breakdown of compliance information for each assignment at subscription/MG/tenant scope\r\n// Gets aggregated compliance and policy definition information for each of the assignments in the selected scope as well as a few additional details, including: policySetDefinition or policyDefinition details for those assignments, the number of policies/groups within the policysetDefinitions listed, number of non-compliant policies within each policySetDefinition and the resource count breakdown per compliance state for those assignments.\r\n// Click the \"Run query\" command above to execute the query and see results.\r\npolicyResources\r\n| where type =~'Microsoft.Authorization/PolicyAssignments'\r\n| project policyAssignmentId = tolower(tostring(id)), policyAssignmentName = name, policyAssignmentDisplayName = tostring(properties.displayName), policyAssignmentScope = tostring(properties.scope), policyAssignmentDefinitionId = tolower(properties.policyDefinitionId), policyAssignmentNotScopes = tolower(properties.notScopes) \r\n| join kind=leftouter(\r\n policyResources\r\n | where type =~'Microsoft.Authorization/PolicySetDefinitions' or type =~'Microsoft.Authorization/PolicyDefinitions'\r\n | project definitionId = tolower(id), type, numberOfPolicies = array_length(properties.policyDefinitions), category = tostring(properties.metadata.category), numberOfGroups= array_length(properties.policyDefinitionGroups), mode = tostring(properties.mode)\r\n | extend isRegulatoryInitiative = iff(category =~ 'Regulatory Compliance', true, false)\r\n | extend definitionType = iff(type =~ 'Microsoft.Authorization/PolicysetDefinitions', 'initiative', 'policy')\r\n | extend isRPMode = iff(mode startswith 'Microsoft.', true, false)\r\n | extend category = 'Compute'\r\n | project definitionId, numberOfPolicies, category, numberOfGroups, isRegulatoryInitiative, definitionType, isRPMode\r\n) on $left.policyAssignmentDefinitionId == $right.definitionId\r\n| join kind=leftouter(\r\n policyResources \r\n | where type =~ 'Microsoft.PolicyInsights/PolicyStates'\r\n | extend complianceState = tostring(properties.complianceState)\r\n | extend policyStateResourceId =id, resourceId = tostring(properties.resourceId), policyAssignmentId = tostring(properties.policyAssignmentId), policyDefinitionId = tostring(properties.policyDefinitionId), policySetDefinitionId = tostring(properties.policySetDefinitionId), policyDefinitionReferenceId = tostring(properties.policyDefinitionReferenceId), policyDefinitionAction = tostring(properties.policyDefinitionAction), policyDefinitionGroupNames = iff(isnotnull(properties.policyDefinitionGroupNames), properties.policyDefinitionGroupNames, dynamic([''])), stateWeight = toint(properties.stateWeight)\r\n | summarize max(stateWeight) by resourceId, policyAssignmentId, policySetDefinitionId\r\n | summarize resourceCounts = count() by policyAssignmentId, policySetDefinitionId, max_stateWeight\r\n| extend complianceState = case(\r\nmax_stateWeight == 300, 'noncompliant',\r\nmax_stateWeight == 200, 'compliant',\r\nmax_stateWeight == 100, 'conflict',\r\nmax_stateWeight == 50, 'exempt',\r\nmax_stateWeight == 10, 'unknown',\r\n'notapplicable')\r\n | extend pack = pack('complianceState', complianceState, 'resourceCounts', resourceCounts), numberOfNonCompliantResources = toint(iff(complianceState =~ 'NonCompliant', resourceCounts,0))\r\n | summarize numberOfNonCompliantResources = max(numberOfNonCompliantResources), details = makelist(pack) by policyAssignmentId, policySetDefinitionId\r\n | limit 5000\r\n) on $left.policyAssignmentId == $right.policyAssignmentId\r\n| sort by numberOfNonCompliantResources desc\r\n| project-away policyAssignmentId1",
              "size": 0,
              "title": "Compute Compliance",
              "showExportToExcel": true,
              "queryType": 1,
              "resourceType": "microsoft.resources/tenants",
              "crossComponentResources": [
                "value::tenant"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "policyAssignmentName",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "policyAssignmentNotScopes",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "definitionId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "numberOfPolicies",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "numberOfGroups",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "isRegulatoryInitiative",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "isRPMode",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "policySetDefinitionId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "details",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "CellDetails",
                      "linkLabel": "🔍 View Details",
                      "linkIsContextBlade": true
                    }
                  }
                ],
                "filter": true
              }
            },
            "name": "query - Compute Compliance"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// Breakdown of compliance information for each assignment at subscription/MG/tenant scope\r\n// Gets aggregated compliance and policy definition information for each of the assignments in the selected scope as well as a few additional details, including: policySetDefinition or policyDefinition details for those assignments, the number of policies/groups within the policysetDefinitions listed, number of non-compliant policies within each policySetDefinition and the resource count breakdown per compliance state for those assignments.\r\n// Click the \"Run query\" command above to execute the query and see results.\r\npolicyResources\r\n| where type =~'Microsoft.Authorization/PolicyAssignments'\r\n| project policyAssignmentId = tolower(tostring(id)), policyAssignmentName = name, policyAssignmentDisplayName = tostring(properties.displayName), policyAssignmentScope = tostring(properties.scope), policyAssignmentDefinitionId = tolower(properties.policyDefinitionId), policyAssignmentNotScopes = tolower(properties.notScopes) \r\n| join kind=leftouter(\r\n policyResources\r\n | where type =~'Microsoft.Authorization/PolicySetDefinitions' or type =~'Microsoft.Authorization/PolicyDefinitions'\r\n | project definitionId = tolower(id), type, numberOfPolicies = array_length(properties.policyDefinitions), category = tostring(properties.metadata.category), numberOfGroups= array_length(properties.policyDefinitionGroups), mode = tostring(properties.mode)\r\n | extend isRegulatoryInitiative = iff(category =~ 'Regulatory Compliance', true, false)\r\n | extend definitionType = iff(type =~ 'Microsoft.Authorization/PolicysetDefinitions', 'initiative', 'policy')\r\n | extend isRPMode = iff(mode startswith 'Microsoft.', true, false)\r\n | extend category = 'Network'\r\n | project definitionId, numberOfPolicies, category, numberOfGroups, isRegulatoryInitiative, definitionType, isRPMode\r\n) on $left.policyAssignmentDefinitionId == $right.definitionId\r\n| join kind=leftouter(\r\n policyResources \r\n | where type =~ 'Microsoft.PolicyInsights/PolicyStates'\r\n | extend complianceState = tostring(properties.complianceState)\r\n | extend policyStateResourceId =id, resourceId = tostring(properties.resourceId), policyAssignmentId = tostring(properties.policyAssignmentId), policyDefinitionId = tostring(properties.policyDefinitionId), policySetDefinitionId = tostring(properties.policySetDefinitionId), policyDefinitionReferenceId = tostring(properties.policyDefinitionReferenceId), policyDefinitionAction = tostring(properties.policyDefinitionAction), policyDefinitionGroupNames = iff(isnotnull(properties.policyDefinitionGroupNames), properties.policyDefinitionGroupNames, dynamic([''])), stateWeight = toint(properties.stateWeight)\r\n | summarize max(stateWeight) by resourceId, policyAssignmentId, policySetDefinitionId\r\n | summarize resourceCounts = count() by policyAssignmentId, policySetDefinitionId, max_stateWeight\r\n| extend complianceState = case(\r\nmax_stateWeight == 300, 'noncompliant',\r\nmax_stateWeight == 200, 'compliant',\r\nmax_stateWeight == 100, 'conflict',\r\nmax_stateWeight == 50, 'exempt',\r\nmax_stateWeight == 10, 'unknown',\r\n'notapplicable')\r\n | extend pack = pack('complianceState', complianceState, 'resourceCounts', resourceCounts), numberOfNonCompliantResources = toint(iff(complianceState =~ 'NonCompliant', resourceCounts,0))\r\n | summarize numberOfNonCompliantResources = max(numberOfNonCompliantResources), details = makelist(pack) by policyAssignmentId, policySetDefinitionId\r\n | limit 5000\r\n) on $left.policyAssignmentId == $right.policyAssignmentId\r\n| sort by numberOfNonCompliantResources desc\r\n| project-away policyAssignmentId1",
              "size": 0,
              "title": "Network Compliance",
              "showExportToExcel": true,
              "queryType": 1,
              "resourceType": "microsoft.resources/tenants",
              "crossComponentResources": [
                "value::tenant"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "policyAssignmentName",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "policyAssignmentNotScopes",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "definitionId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "numberOfPolicies",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "numberOfGroups",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "isRegulatoryInitiative",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "isRPMode",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "policySetDefinitionId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "details",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "CellDetails",
                      "linkLabel": "🔍 View Details",
                      "linkIsContextBlade": true
                    }
                  }
                ],
                "filter": true
              }
            },
            "name": "query - Network Compliance"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "// Breakdown of compliance information for each assignment at subscription/MG/tenant scope\r\n// Gets aggregated compliance and policy definition information for each of the assignments in the selected scope as well as a few additional details, including: policySetDefinition or policyDefinition details for those assignments, the number of policies/groups within the policysetDefinitions listed, number of non-compliant policies within each policySetDefinition and the resource count breakdown per compliance state for those assignments.\r\n// Click the \"Run query\" command above to execute the query and see results.\r\npolicyResources\r\n| where type =~'Microsoft.Authorization/PolicyAssignments'\r\n| project policyAssignmentId = tolower(tostring(id)), policyAssignmentName = name, policyAssignmentDisplayName = tostring(properties.displayName), policyAssignmentScope = tostring(properties.scope), policyAssignmentDefinitionId = tolower(properties.policyDefinitionId), policyAssignmentNotScopes = tolower(properties.notScopes) \r\n| join kind=leftouter(\r\n policyResources\r\n | where type =~'Microsoft.Authorization/PolicySetDefinitions' or type =~'Microsoft.Authorization/PolicyDefinitions'\r\n | project definitionId = tolower(id), type, numberOfPolicies = array_length(properties.policyDefinitions), category = tostring(properties.metadata.category), numberOfGroups= array_length(properties.policyDefinitionGroups), mode = tostring(properties.mode)\r\n | extend isRegulatoryInitiative = iff(category =~ 'Regulatory Compliance', true, false)\r\n | extend definitionType = iff(type =~ 'Microsoft.Authorization/PolicysetDefinitions', 'initiative', 'policy')\r\n | extend isRPMode = iff(mode startswith 'Microsoft.', true, false)\r\n | extend category = 'Data'\r\n | project definitionId, numberOfPolicies, category, numberOfGroups, isRegulatoryInitiative, definitionType, isRPMode\r\n) on $left.policyAssignmentDefinitionId == $right.definitionId\r\n| join kind=leftouter(\r\n policyResources \r\n | where type =~ 'Microsoft.PolicyInsights/PolicyStates'\r\n | extend complianceState = tostring(properties.complianceState)\r\n | extend policyStateResourceId =id, resourceId = tostring(properties.resourceId), policyAssignmentId = tostring(properties.policyAssignmentId), policyDefinitionId = tostring(properties.policyDefinitionId), policySetDefinitionId = tostring(properties.policySetDefinitionId), policyDefinitionReferenceId = tostring(properties.policyDefinitionReferenceId), policyDefinitionAction = tostring(properties.policyDefinitionAction), policyDefinitionGroupNames = iff(isnotnull(properties.policyDefinitionGroupNames), properties.policyDefinitionGroupNames, dynamic([''])), stateWeight = toint(properties.stateWeight)\r\n | summarize max(stateWeight) by resourceId, policyAssignmentId, policySetDefinitionId\r\n | summarize resourceCounts = count() by policyAssignmentId, policySetDefinitionId, max_stateWeight\r\n| extend complianceState = case(\r\nmax_stateWeight == 300, 'noncompliant',\r\nmax_stateWeight == 200, 'compliant',\r\nmax_stateWeight == 100, 'conflict',\r\nmax_stateWeight == 50, 'exempt',\r\nmax_stateWeight == 10, 'unknown',\r\n'notapplicable')\r\n | extend pack = pack('complianceState', complianceState, 'resourceCounts', resourceCounts), numberOfNonCompliantResources = toint(iff(complianceState =~ 'NonCompliant', resourceCounts,0))\r\n | summarize numberOfNonCompliantResources = max(numberOfNonCompliantResources), details = makelist(pack) by policyAssignmentId, policySetDefinitionId\r\n | limit 5000\r\n) on $left.policyAssignmentId == $right.policyAssignmentId\r\n| sort by numberOfNonCompliantResources desc\r\n| project-away policyAssignmentId1",
              "size": 0,
              "title": "Data Compliance",
              "showExportToExcel": true,
              "queryType": 1,
              "resourceType": "microsoft.resources/tenants",
              "crossComponentResources": [
                "value::tenant"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "policyAssignmentName",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "policyAssignmentNotScopes",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "definitionId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "numberOfPolicies",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "numberOfGroups",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "isRegulatoryInitiative",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "isRPMode",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "policySetDefinitionId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "details",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "CellDetails",
                      "linkLabel": "🔍 View Details",
                      "linkIsContextBlade": true
                    }
                  }
                ],
                "filter": true
              }
            },
            "name": "query - Data Compliance"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "AzureActivity\r\n| where ActivityStatusValue has \"Failure\"\r\n| summarize AggregatedValue = count() by ResourceProviderValue\r\n| order by AggregatedValue desc",
              "size": 3,
              "showAnalytics": true,
              "title": "Failures by Resources",
              "timeContext": {
                "durationMs": 86400000
              },
              "queryType": 0,
              "resourceType": "microsoft.resources/subscriptions",
              "crossComponentResources": [
                "/subscriptions/3d2171d3-2b1e-41d6-a62c-dc780b0c5a04"
              ],
              "visualization": "piechart",
              "tileSettings": {
                "showBorder": false,
                "titleContent": {
                  "columnMatch": "ResourceProviderValue",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "AggregatedValue",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              },
              "graphSettings": {
                "type": 0,
                "topContent": {
                  "columnMatch": "ResourceProviderValue",
                  "formatter": 1
                },
                "centerContent": {
                  "columnMatch": "AggregatedValue",
                  "formatter": 1,
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              }
            },
            "customWidth": "33",
            "name": "query - Failures by Resources"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "AzureActivity\r\n| where ActivityStatusValue has \"Failure\" or ActivityStatusValue has \"Failed\"\r\n| summarize AggregatedValue = count() by OperationNameValue\r\n| order by AggregatedValue desc",
              "size": 3,
              "showAnalytics": true,
              "title": "Failures by Operations",
              "timeContext": {
                "durationMs": 86400000
              },
              "queryType": 0,
              "resourceType": "microsoft.resources/subscriptions",
              "crossComponentResources": [
                "/subscriptions/3d2171d3-2b1e-41d6-a62c-dc780b0c5a04"
              ],
              "visualization": "piechart",
              "tileSettings": {
                "showBorder": false,
                "titleContent": {
                  "columnMatch": "ResourceProviderValue",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "AggregatedValue",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              },
              "graphSettings": {
                "type": 0,
                "topContent": {
                  "columnMatch": "ResourceProviderValue",
                  "formatter": 1
                },
                "centerContent": {
                  "columnMatch": "AggregatedValue",
                  "formatter": 1,
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              }
            },
            "customWidth": "33",
            "name": "query - Failures by Operations"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "AzureActivity\r\n| where ActivityStatusValue has \"Failure\" or ActivityStatusValue has \"Failed\"\r\n| summarize AggregatedValue = count() by CategoryValue\r\n| order by AggregatedValue desc",
              "size": 3,
              "showAnalytics": true,
              "title": "Failures by Category",
              "timeContext": {
                "durationMs": 86400000
              },
              "queryType": 0,
              "resourceType": "microsoft.resources/subscriptions",
              "crossComponentResources": [
                "/subscriptions/3d2171d3-2b1e-41d6-a62c-dc780b0c5a04"
              ],
              "visualization": "piechart",
              "tileSettings": {
                "showBorder": false,
                "titleContent": {
                  "columnMatch": "ResourceProviderValue",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "AggregatedValue",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              },
              "graphSettings": {
                "type": 0,
                "topContent": {
                  "columnMatch": "ResourceProviderValue",
                  "formatter": 1
                },
                "centerContent": {
                  "columnMatch": "AggregatedValue",
                  "formatter": 1,
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              }
            },
            "customWidth": "33",
            "name": "query - Failures by Category"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "AzureActivity\r\n| where ActivityStatusValue has \"Failure\" or ActivityStatusValue has \"Failed\"\r\n| order by CategoryValue\r\n",
              "size": 0,
              "title": "Failure by Category Details",
              "timeContext": {
                "durationMs": 86400000
              },
              "showExportToExcel": true,
              "queryType": 0,
              "resourceType": "microsoft.resources/subscriptions",
              "crossComponentResources": [
                "/subscriptions/3d2171d3-2b1e-41d6-a62c-dc780b0c5a04"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Authorization",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Authorization_d",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Claims",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Claims_d",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Properties_d",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "_ResourceId",
                    "formatter": 5
                  }
                ],
                "filter": true
              }
            },
            "name": "query - Failure by Category Details"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "Acceleration"
      },
      "name": "group - Acceleration"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "c8d14cfb-de8d-47de-9c44-9a2563bae342",
                  "version": "KqlParameterItem/1.0",
                  "name": "Subscription",
                  "type": 6,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "includeAll": true,
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "defaultValue": "value::all"
                },
                {
                  "id": "4f93ebba-a9d5-4e11-8de4-b605c2b4368f",
                  "version": "KqlParameterItem/1.0",
                  "name": "ResourceIdFilter",
                  "type": 1,
                  "isGlobal": true,
                  "isHiddenWhenLocked": true,
                  "label": "Resource ID"
                },
                {
                  "id": "e505498f-d2eb-4dd6-928f-0f0f0e9cc371",
                  "version": "KqlParameterItem/1.0",
                  "name": "AlertDisplayNameFilter",
                  "type": 1,
                  "isGlobal": true,
                  "isHiddenWhenLocked": true,
                  "label": "Alert display name"
                },
                {
                  "id": "39e382f9-4780-40fa-8595-15eda0f08ad4",
                  "version": "KqlParameterItem/1.0",
                  "name": "NewAlertFilter",
                  "type": 1,
                  "isGlobal": true,
                  "isHiddenWhenLocked": true,
                  "label": "New alert"
                }
              ],
              "style": "above",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "parameters - 15"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "  securityresources\r\n  | where type =~ 'microsoft.security/locations/alerts'\r\n  | where properties.Status in ('Active')\r\n  | where properties.Severity in ('Low', 'Medium', 'High')\r\n  | extend SeverityRank = case(\r\n    properties.Severity == 'High', 3,\r\n    properties.Severity == 'Medium', 2,\r\n    properties.Severity == 'Low', 1,\r\n    0\r\n   )\r\n  | project-away SeverityRank\r\n  | extend Severity = properties.Severity\r\n  | project Severity = tostring(Severity)\r\n  | summarize Count = count() by Severity",
              "size": 0,
              "title": "Severity                                                                                                     ",
              "exportedParameters": [
                {
                  "fieldName": "Subscription",
                  "parameterName": "Subscription",
                  "parameterType": 1
                },
                {
                  "fieldName": "Severity",
                  "parameterName": "SeverityFilter",
                  "parameterType": 1
                }
              ],
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "visualization": "piechart",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Severity",
                    "formatter": 1
                  }
                ]
              },
              "chartSettings": {
                "yAxis": [
                  "Count"
                ],
                "seriesLabelSettings": [
                  {
                    "seriesName": "Medium",
                    "color": "orange"
                  },
                  {
                    "seriesName": "High",
                    "color": "redDark"
                  },
                  {
                    "seriesName": "Low",
                    "color": "yellow"
                  }
                ]
              }
            },
            "customWidth": "30",
            "name": "Severity"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "  securityresources\r\n  | where type =~ 'microsoft.security/locations/alerts'\r\n  | summarize Count =count() by resourceGroup",
              "size": 0,
              "title": "Resource Group",
              "exportFieldName": "resourceGroup",
              "exportParameterName": "resourceGroupFilter",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "visualization": "piechart"
            },
            "customWidth": "30",
            "name": "query - 9"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "resources\r\n  | project id = tolower(id), tags\r\n  | join kind=inner (securityresources\r\n  | where type =~ \"microsoft.security/locations/alerts\"\r\n  | extend isAzure = tostring(properties.ResourceIdentifiers) matches regex '\"Type\"\\\\s*:\\\\s*\"AzureResource\"'\r\n  | extend affectedResourceId = extract('\"AzureResourceId\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.ResourceIdentifiers))\r\n  | extend hostName = iff(isAzure, \"\", extract('\"HostName\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.Entities)))\r\n  | extend splitAffectedResourceId = split(affectedResourceId, \"/\")\r\n  | extend resourceNameIndex = iff(array_length(splitAffectedResourceId) > 1, array_length(splitAffectedResourceId) - 1, 0)\r\n  | extend affectedResourceName = iff(isAzure, splitAffectedResourceId[resourceNameIndex], iff(isempty(hostName), \"Non-Azure\", hostName))| project-away resourceNameIndex, splitAffectedResourceId, hostName, isAzure\r\n  | project alertId = id, subscriptionId, alertProperties = properties, affectedResourceId = tolower(affectedResourceId)\r\n    ) on $left.id == $right.affectedResourceId\r\n  | extend id = alertId, subscriptionId, properties = alertProperties\r\n  | where properties.Status in ('Active')\r\n  | where properties.Severity in ('Low', 'Medium', 'High')\r\n  | extend SeverityRank = case(\r\n    properties.Severity == 'High', 3,\r\n    properties.Severity == 'Medium', 2,\r\n    properties.Severity == 'Low', 1,\r\n    0\r\n    )\r\n  | sort by  SeverityRank desc, tostring(properties.SystemAlertId) asc\r\n   | extend Tag = parse_json(tags)\r\n  | mv-expand Tag\r\n | parse Tag with * ':\"' TagValue '\"}'\r\n | project TagValue, alertId\r\n | summarize Count = count() by TagValue",
              "size": 0,
              "title": "Tag",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "visualization": "piechart"
            },
            "customWidth": "30",
            "name": "query - 7",
            "styleSettings": {
              "maxWidth": "100%"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "datatable(ResourceId: string) [ \"All\"] | union (securityresources\r\n  | where type =~ 'microsoft.security/locations/alerts'\r\n  | extend Prop = parse_json(properties)\r\n  | where Prop.Severity == \"High\"\r\n    | extend ResourceIdentifiers = Prop.[\"ResourceIdentifiers\"]\r\n    | project ResourceIdentifiers\r\n  | mv-expand ResourceIdentifiers\r\n  | extend ResourceId = parse_json(ResourceIdentifiers).[\"AzureResourceId\"]\r\n  | where isnotempty(ResourceId )\r\n|  summarize Count=count() by tostring(ResourceId)\r\n  | top 5 by Count)",
              "size": 1,
              "title": "Top 5 attacked resources (with High Severity)",
              "noDataMessage": "There are no Top 5 attacked resources found",
              "exportedParameters": [
                {
                  "fieldName": "ResourceId",
                  "parameterName": "ResourceIdFilter",
                  "defaultValue": "All"
                },
                {
                  "fieldName": "ResourceId",
                  "parameterName": "ShowTable",
                  "parameterType": 1
                }
              ],
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Resource ID",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true
                    }
                  }
                ],
                "sortBy": [
                  {
                    "itemKey": "Count",
                    "sortOrder": 2
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "ResourceId",
                    "label": "Resource ID"
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "Count",
                  "sortOrder": 2
                }
              ]
            },
            "customWidth": "30",
            "name": "Top 5 attacked resources (with High Severity)"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "  datatable(AlertDisplayName: string) [ \"All\"] | union(securityresources\r\n  | where type =~ 'microsoft.security/locations/alerts'\r\n    | extend Prop = parse_json(properties)\r\n  | extend AlertDisplayName = Prop.[\"AlertDisplayName\"]\r\n  | project tostring(AlertDisplayName)\r\n  | summarize Count = count() by AlertDisplayName\r\n  | top 5 by Count)",
              "size": 1,
              "title": "Top alert types       ",
              "exportedParameters": [
                {
                  "fieldName": "AlertDisplayName",
                  "parameterName": "AlertDisplayNameFilter",
                  "defaultValue": "All"
                },
                {
                  "fieldName": "AlertDisplayName",
                  "parameterName": "ShowTable",
                  "parameterType": 1
                }
              ],
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "visualization": "table",
              "gridSettings": {
                "sortBy": [
                  {
                    "itemKey": "Count",
                    "sortOrder": 2
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "AlertDisplayName",
                    "label": "Alert display name"
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "Count",
                  "sortOrder": 2
                }
              ]
            },
            "customWidth": "30",
            "name": "Top alert types"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "  datatable(AlertDisplayName: string) [ \"All\"] | union(securityresources\r\n| where type =~ 'microsoft.security/locations/alerts'\r\n| extend Prop = parse_json(properties)\r\n| extend TimeGeneratedUtc = Prop.[\"TimeGeneratedUtc\"]\r\n| extend AlertDisplayName = Prop.[\"AlertDisplayName\"]\r\n| where TimeGeneratedUtc > ago(24h)\r\n| summarize Count=count() by tostring(AlertDisplayName))",
              "size": 1,
              "title": "New Alerts (Since last 24hrs)",
              "noDataMessage": "No new alerts in Last 24 hours",
              "noDataMessageStyle": 3,
              "exportedParameters": [
                {
                  "fieldName": "AlertDisplayName",
                  "parameterName": "NewAlertFilter",
                  "defaultValue": "All"
                },
                {
                  "fieldName": "AlertDisplayName",
                  "parameterName": "ShowTable",
                  "parameterType": 1
                }
              ],
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "ClearOther",
                    "formatter": 5
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "AlertDisplayName",
                    "label": "Alert display name"
                  }
                ]
              },
              "sortBy": []
            },
            "customWidth": "25",
            "name": "New Alerts (Since last 24hrs)"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "",
              "size": 0,
              "title": "Parameters at this point",
              "queryType": 2
            },
            "conditionalVisibility": {
              "parameterName": "parameter1",
              "comparison": "isEqualTo",
              "value": "1"
            },
            "name": "query - 23"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n| where type == \"microsoft.security/locations/alerts\"\r\n| project-rename P= properties\r\n| extend Details = parse_json(P)\r\n| extend IsIncident = Details.[\"IsIncident\"]\r\n| extend AlertDisplayName = Details.[\"AlertDisplayName\"]\r\n| extend SystemAlertId = Details.[\"SystemAlertId\"]\r\n| extend Severity = tostring(Details.[\"Severity\"])\r\n| where Severity == \"High\"\r\n| extend AlertUri = Details.[\"AlertUri\"]\r\n| extend Status = tostring(Details.[\"Status\"])\r\n| extend Tactics = tostring(Details.[\"Intent\"])\r\n| extend ResourceIdentifiers = Details.[\"ResourceIdentifiers\"]\r\n| mv-expand ResourceIdentifiers\r\n| extend ResourceId = parse_json(ResourceIdentifiers).[\"AzureResourceId\"]\r\n| where Status == \"Active\"\r\n| where (\"{ResourceIdFilter}\" == \"All\" or ResourceId == \"{ResourceIdFilter}\") \r\n    // if either alert name or new alert are set, union those 2 together, if neither are set treat as all\r\n    and ((\"{AlertDisplayNameFilter}\" == \"All\" and \"{NewAlertFilter}\" == \"All\") or AlertDisplayName == \"{AlertDisplayNameFilter}\" or AlertDisplayName == \"{NewAlertFilter}\")\r\n| extend SeverityRank = case(\r\n    Severity == 'High', 3,\r\n    Severity == 'Medium', 2,\r\n    Severity == 'Low', 1,\r\n    0\r\n    )\r\n| parse AlertUri with * '/subscriptionId/'  SubscriptionId  '/' *\r\n| parse AlertUri with * '/resourceGroup/'  ResourceGroup  '/' *\r\n| parse AlertUri with * '/location/'  Location  \r\n| project\r\n    Severity,\r\n    SystemAlertId,\r\n    AlertDisplayName,\r\n    IsIncident = iif(IsIncident == \"true\", \"Incident\", \"Alert\"),\r\n    AlertUri,\r\n    Tactics,\r\n    SeverityRank,\r\n    SubscriptionId,\r\n    ResourceGroup,\r\n    Location,\r\n    ResourceId\r\n| sort by SeverityRank",
              "size": 0,
              "title": "{$rowCount} Active Alerts ",
              "exportedParameters": [
                {
                  "fieldName": "ResourceId",
                  "parameterName": "Resource",
                  "parameterType": 1
                },
                {
                  "fieldName": "AlertUri",
                  "parameterName": "AlertUri",
                  "parameterType": 1
                },
                {
                  "fieldName": "SystemAlertId",
                  "parameterName": "SystemAlertId",
                  "parameterType": 1
                },
                {
                  "fieldName": "SubscriptionId",
                  "parameterName": "SubscriptionId",
                  "parameterType": 1
                },
                {
                  "fieldName": "ResourceGroup",
                  "parameterName": "ResourceGroup",
                  "parameterType": 1
                },
                {
                  "fieldName": "Location",
                  "parameterName": "Location",
                  "parameterType": 1
                }
              ],
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Severity",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "contains",
                          "thresholdValue": "High",
                          "representation": "redBright",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "contains",
                          "thresholdValue": "Medium",
                          "representation": "orange",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "contains",
                          "thresholdValue": "Low",
                          "representation": "yellow",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "contains",
                          "thresholdValue": "Informational ",
                          "representation": "gray",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": null,
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "SystemAlertId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "AlertDisplayName",
                    "formatter": 1,
                    "formatOptions": {
                      "linkTarget": "OpenBlade",
                      "bladeOpenContext": {
                        "bladeName": "AlertBlade",
                        "extensionName": "Microsoft_Azure_Security",
                        "bladeParameters": [
                          {
                            "name": "alertId",
                            "source": "column",
                            "value": "SystemAlertId"
                          },
                          {
                            "name": "subscriptionId",
                            "source": "column",
                            "value": "SubscriptionId"
                          },
                          {
                            "name": "resourceGroup",
                            "source": "column",
                            "value": "ResourceGroup"
                          },
                          {
                            "name": "referencedFrom",
                            "source": "static",
                            "value": "activeAlertsWorkbook"
                          },
                          {
                            "name": "location",
                            "source": "column",
                            "value": "Location"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "columnMatch": "IsIncident",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "AlertUri",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Tactics",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "SubscriptionId",
                    "formatter": 15,
                    "formatOptions": {
                      "linkTarget": "Resource",
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Location",
                    "formatter": 17
                  },
                  {
                    "columnMatch": "ResourceId",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": "Resource",
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "TenantId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "AlertName",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Description",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "ProviderName",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "VendorName",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "VendorOriginalId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "SourceComputerId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "AlertType",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "ConfidenceLevel",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "ConfidenceScore",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "StartTime",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "EndTime",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "ProcessingEndTime",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "RemediationSteps",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "ExtendedProperties",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Entities",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "SourceSystem",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "WorkspaceSubscriptionId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "WorkspaceResourceGroup",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "ExtendedLinks",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "ProductName",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "ProductComponentName",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "AlertLink",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "Url"
                    }
                  },
                  {
                    "columnMatch": "SystemIncidentId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "SystemAlertId1",
                    "formatter": 5
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "SystemAlertId",
                    "label": "Alert ID"
                  },
                  {
                    "columnId": "AlertDisplayName",
                    "label": "Alert name"
                  },
                  {
                    "columnId": "IsIncident",
                    "label": "Incident/alert"
                  },
                  {
                    "columnId": "SeverityRank",
                    "label": "Severity"
                  },
                  {
                    "columnId": "SubscriptionId",
                    "label": "Subscription"
                  },
                  {
                    "columnId": "ResourceGroup",
                    "label": "Resource group"
                  },
                  {
                    "columnId": "ResourceId",
                    "label": "Resource"
                  }
                ]
              },
              "sortBy": []
            },
            "conditionalVisibility": {
              "parameterName": "ShowTable",
              "comparison": "isNotEqualTo"
            },
            "showPin": true,
            "name": "SecurityIncidents - FilterbyResourceId",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "list",
              "links": [
                {
                  "id": "2f6ff56b-9afb-46f6-968d-a59cb744ea14",
                  "linkTarget": "OpenBlade",
                  "linkLabel": "Open Alert View",
                  "style": "primary",
                  "bladeOpenContext": {
                    "bladeName": "AlertBlade",
                    "extensionName": "Microsoft_Azure_Security",
                    "bladeParameters": [
                      {
                        "name": "alertId",
                        "source": "static",
                        "value": "{SystemAlertId}"
                      },
                      {
                        "name": "subscriptionId",
                        "source": "static",
                        "value": "{SubscriptionId}"
                      },
                      {
                        "name": "resourceGroup",
                        "source": "static",
                        "value": "{ResourceGroup}"
                      },
                      {
                        "name": "referencedFrom",
                        "source": "static",
                        "value": "activeAlertsWorkbook"
                      },
                      {
                        "name": "location",
                        "source": "static",
                        "value": "{Location}"
                      }
                    ]
                  }
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "SystemAlertId",
              "comparison": "isNotEqualTo"
            },
            "name": "Alerts  "
          },
          {
            "type": 1,
            "content": {
              "json": "### MITRE ATT&CK tactics &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
            },
            "customWidth": "100",
            "name": "text - 17"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n| where type == \"microsoft.security/locations/alerts\"\r\n| extend Details = parse_json(properties)\r\n| extend Tactics = Details.[\"Intent\"]\r\n| project Tactics\r\n| extend Tactic = split(Tactics,\",\")\r\n| mv-expand Tactic\r\n| extend Tactic = trim(\" \",tostring(Tactic))\r\n| summarize Count = count() by Tactic\r\n| sort by Count desc\r\n",
              "size": 0,
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "visualization": "barchart",
              "tileSettings": {
                "showBorder": false,
                "titleContent": {
                  "columnMatch": "Tactics",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "count_",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              },
              "graphSettings": {
                "type": 0,
                "topContent": {
                  "columnMatch": "Tactics",
                  "formatter": 1
                },
                "centerContent": {
                  "columnMatch": "count_",
                  "formatter": 1,
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              },
              "mapSettings": {
                "locInfo": "LatLong",
                "sizeSettings": "count_",
                "sizeAggregation": "Sum",
                "legendMetric": "count_",
                "legendAggregation": "Sum",
                "itemColorSettings": {
                  "type": "heatmap",
                  "colorAggregation": "Sum",
                  "nodeColorField": "count_",
                  "heatmapPalette": "greenRed"
                }
              }
            },
            "customWidth": "80",
            "name": "query - 17",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "tabs",
              "links": [
                {
                  "id": "bd374a50-b240-4232-ad4a-77725f80bcf5",
                  "cellValue": "View",
                  "linkTarget": "parameter",
                  "linkLabel": "List View",
                  "subTarget": "List",
                  "preText": "",
                  "style": "link"
                },
                {
                  "id": "588b7d9f-8ff1-4afa-8d3f-b0085ae6b148",
                  "cellValue": "View",
                  "linkTarget": "parameter",
                  "linkLabel": "Map View",
                  "subTarget": "Map",
                  "preText": "",
                  "style": "link"
                }
              ]
            },
            "name": "links - 10"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "parameters": [
                {
                  "id": "1ffc8fe9-a919-4c9e-8489-a92f0a7d79e1",
                  "version": "KqlParameterItem/1.0",
                  "name": "ResourceFilter",
                  "label": "Resource",
                  "type": 5,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "securityresources\r\n  | where type =~ 'microsoft.security/locations/alerts'\r\n  | extend Prop = parse_json(properties)\r\n  | extend ResourceIdentifiers = Prop.[\"ResourceIdentifiers\"]\r\n    | project ResourceIdentifiers\r\n  | mv-expand ResourceIdentifiers\r\n  | extend ResourceId = parse_json(ResourceIdentifiers).[\"AzureResourceId\"]\r\n  //| where isnotempty(ResourceId )\r\n  | extend Resource = tolower(tostring(ResourceId))\r\n  | summarize count() by Resource\r\n  | project Resource\r\n  //| order by Resource asc\r\n",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "value": [
                    "value::all"
                  ]
                },
                {
                  "id": "e9522d87-143f-408b-93ea-b8f07223995e",
                  "version": "KqlParameterItem/1.0",
                  "name": "SeverityFilter",
                  "label": "Severity",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "value": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n\r\n{\"value\": \"High\", \"label\":\"High\"},\r\n{\"value\": \"Medium\", \"label\":\"Medium\"},\r\n{\"value\": \"Low\", \"label\":\"Low\"},\r\n{\"value\": \"Informational\", \"label\":\"Informational\"}\r\n]\r\n    \r\n ",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "defaultValue": "value::all"
                },
                {
                  "id": "664365b5-1fc4-4cfa-b99d-a72e3d35ab11",
                  "version": "KqlParameterItem/1.0",
                  "name": "ResourceGroupFilter",
                  "label": "Resource group",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "  securityresources\r\n  | where type =~ 'microsoft.security/locations/alerts'\r\n  | extend resourceGroup = iif(isempty(resourceGroup),\" \",resourceGroup)\r\n| summarize Count =count() by resourceGroup\r\n  | project resourceGroup",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "value": [
                    "value::all"
                  ]
                },
                {
                  "id": "48a8dd7e-43ab-413e-88f8-a433100d92ce",
                  "version": "KqlParameterItem/1.0",
                  "name": "AlertNameFilter",
                  "label": "Alert name",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "  securityresources\r\n  | where type =~ 'microsoft.security/locations/alerts'\r\n    | extend Prop = parse_json(properties)\r\n  | extend AlertDisplayName = Prop.[\"AlertDisplayName\"]\r\n  | distinct tostring(AlertDisplayName)\r\n  | order by AlertDisplayName asc\r\n ",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "378aeb0c-9135-43fa-b46a-86f71baa0137",
                  "version": "KqlParameterItem/1.0",
                  "name": "TagFilter",
                  "label": "Tag",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "securityresources\r\n  | where type =~ \"microsoft.security/locations/alerts\"\r\n    | extend isAzure = tostring(properties.ResourceIdentifiers) matches regex '\"Type\"\\\\s*:\\\\s*\"AzureResource\"'\r\n  | extend Details = parse_json(properties)\r\n| extend IsIncident = Details.[\"IsIncident\"]\r\n| extend AlertDisplayName = Details.[\"AlertDisplayName\"]\r\n| extend SystemAlertId = Details.[\"SystemAlertId\"]\r\n| extend Severity = Details.[\"Severity\"]\r\n| extend AlertUri = Details.[\"AlertUri\"]\r\n| extend Status = Details.[\"Status\"]\r\n| extend Tactics = Details.[\"Intent\"]\r\n| parse AlertUri with * '/subscriptionId/'  SubscriptionId  '/' *\r\n| parse AlertUri with * '/resourceGroup/'  ResourceGroup  '/' *\r\n| parse AlertUri with * '/location/'  Location  \r\n  | extend affectedResourceId = extract('\"AzureResourceId\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.ResourceIdentifiers))\r\n  | extend hostName = iff(isAzure, \"\", extract('\"HostName\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.Entities)))\r\n  | extend splitAffectedResourceId = split(affectedResourceId, \"/\")\r\n  | extend resourceNameIndex = iff(array_length(splitAffectedResourceId) > 1, array_length(splitAffectedResourceId) - 1, 0)\r\n  | extend affectedResourceName = iff(isAzure, splitAffectedResourceId[resourceNameIndex], iff(isempty(hostName), \"Non-Azure\", hostName))| project-away resourceNameIndex, splitAffectedResourceId, hostName\r\n  | extend ResourceIdentifiers = Details.[\"ResourceIdentifiers\"]\r\n    | mv-expand ResourceIdentifiers\r\n  | extend ResourceId = parse_json(ResourceIdentifiers).[\"AzureResourceId\"]\r\n  | extend Resource = tolower(tostring(ResourceId))\r\n  | project alertId = id, subscriptionId, alertProperties = properties, affectedResourceId = tolower(affectedResourceId),tostring(Severity), SystemAlertId, AlertDisplayName,IsIncident = iif(IsIncident==\"true\",\"Incident\",\"Alert\"),AlertUri,Status,Tactics,SubscriptionId,ResourceGroup,Location, ResourceIdentifier=Details.[\"ResourceIdentifiers\"],Resource\r\n  | join kind=leftouter (\r\n  resources\r\n  | project id = tolower(id), tags\r\n  ) on $left.affectedResourceId == $right.id\r\n | extend Tag = parse_json(tags)\r\n  | mv-expand Tag\r\n | parse Tag with * ':\"' TagValue '\"}'\r\n | extend TagValue = iif(isempty(TagValue),\" \",TagValue)\r\n  | project TagValue, alertId\r\n | distinct TagValue\r\n ",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                }
              ],
              "style": "pills",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources"
            },
            "conditionalVisibility": {
              "parameterName": "View",
              "comparison": "isEqualTo",
              "value": "List"
            },
            "name": "parameters - 23"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n| where type =~ \"microsoft.security/locations/alerts\"\r\n| extend isAzure = tostring(properties.ResourceIdentifiers) matches regex '\"Type\"\\\\s*:\\\\s*\"AzureResource\"'\r\n| extend Details = parse_json(properties)\r\n| extend IsIncident = Details.[\"IsIncident\"]\r\n| extend AlertDisplayName = Details.[\"AlertDisplayName\"]\r\n| extend SystemAlertId = Details.[\"SystemAlertId\"]\r\n| extend Severity = Details.[\"Severity\"]\r\n| extend AlertUri = Details.[\"AlertUri\"]\r\n| extend Status = Details.[\"Status\"]\r\n| extend Tactics = Details.[\"Intent\"]\r\n| parse AlertUri with * '/subscriptionId/'  SubscriptionId  '/' *\r\n| parse AlertUri with * '/resourceGroup/'  ResourceGroup  '/' *\r\n| parse AlertUri with * '/location/'  Location  \r\n| extend affectedResourceId = extract('\"AzureResourceId\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.ResourceIdentifiers))\r\n| extend hostName = iff(isAzure, \"\", extract('\"HostName\"\\\\s*:\\\\s*\"([^\"]*)\"', 1, tostring(properties.Entities)))\r\n| extend splitAffectedResourceId = split(affectedResourceId, \"/\")\r\n| extend resourceNameIndex = iff(array_length(splitAffectedResourceId) > 1, array_length(splitAffectedResourceId) - 1, 0)\r\n| extend affectedResourceName = iff(isAzure, splitAffectedResourceId[resourceNameIndex], iff(isempty(hostName), \"Non-Azure\", hostName))\r\n| project-away resourceNameIndex, splitAffectedResourceId, hostName\r\n| extend ResourceIdentifiers = Details.[\"ResourceIdentifiers\"]\r\n| mv-expand ResourceIdentifiers\r\n| extend ResourceId = parse_json(ResourceIdentifiers).[\"AzureResourceId\"]\r\n| extend Resource = tolower(tostring(ResourceId))\r\n| project\r\n    alertId = id,\r\n    subscriptionId,\r\n    alertProperties = properties,\r\n    affectedResourceId = tolower(affectedResourceId),\r\n    tostring(Severity),\r\n    SystemAlertId,\r\n    AlertDisplayName,\r\n    IsIncident = iif(IsIncident == \"true\", \"Incident\", \"Alert\"),\r\n    AlertUri,\r\n    Status,\r\n    Tactics,\r\n    SubscriptionId,\r\n    ResourceGroup,\r\n    Location,\r\n    ResourceId,\r\n    ResourceIdentifier=Details.[\"ResourceIdentifiers\"],\r\n    Resource\r\n| join kind=leftouter (\r\n    resources\r\n    | project id = tolower(id), tags\r\n    )\r\n    on $left.affectedResourceId == $right.id\r\n| extend id = alertId, subscriptionId, properties = alertProperties\r\n| extend ResourceFilter =\" {ResourceFilter}\"\r\n| where Resource in~ ({ResourceFilter})\r\n| where Severity in~ ({SeverityFilter})\r\n| where AlertDisplayName in~ ({AlertNameFilter})\r\n| where Status == \"Active\"\r\n| extend ResourceGroup = iif(isempty(ResourceGroup), \" \", ResourceGroup)\r\n| where ResourceGroup in~ ({ResourceGroupFilter})\r\n| extend tag = iff(isempty(tags), dynamic({\"tags\": \" \"}), parse_json(tags))\r\n| mv-expand tag\r\n| parse tag with * ':\"' TagValue '\"}'\r\n| extend TagValue = iif(isempty(TagValue), \" \", TagValue)\r\n| where TagValue in ({TagFilter})\r\n| where AlertDisplayName !startswith ('[SAMPLE ALERT]')\r\n| project\r\n    (Severity),\r\n    tostring(SystemAlertId),\r\n    tostring(AlertDisplayName),\r\n    IsIncident = iif(IsIncident == \"true\", \"Incident\", \"Alert\"),\r\n    AlertURI = tostring(AlertUri),\r\n    tostring(Status),\r\n    tostring(Tactics),\r\n    SubscriptionId,\r\n    ResourceGroup,\r\n    Location,\r\n    TagValue,\r\n    tostring(tags),\r\n    tostring(ResourceId)\r\n| distinct\r\n    Severity,\r\n    SystemAlertId,\r\n    AlertDisplayName,\r\n    IsIncident,\r\n    AlertURI,\r\n    Status,\r\n    Tactics,\r\n    SubscriptionId,\r\n    ResourceGroup,\r\n    Location,\r\n    tags,\r\n    ResourceId\r\n| order by Severity asc",
              "size": 0,
              "title": "Active Alerts ",
              "exportedParameters": [
                {
                  "fieldName": "Resource",
                  "parameterName": "Resource",
                  "parameterType": 1
                },
                {
                  "fieldName": "AlertUri",
                  "parameterName": "AlertUri",
                  "parameterType": 1
                },
                {
                  "fieldName": "SystemAlertId",
                  "parameterName": "SystemAlertId",
                  "parameterType": 1
                },
                {
                  "fieldName": "SubscriptionId",
                  "parameterName": "SubscriptionId",
                  "parameterType": 1
                },
                {
                  "fieldName": "ResourceGroup",
                  "parameterName": "ResourceGroup",
                  "parameterType": 1
                },
                {
                  "fieldName": "Location",
                  "parameterName": "Location",
                  "parameterType": 1
                }
              ],
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Severity",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "colors",
                      "thresholdsGrid": [
                        {
                          "operator": "contains",
                          "thresholdValue": "High",
                          "representation": "redBright",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "contains",
                          "thresholdValue": "Medium",
                          "representation": "orange",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "contains",
                          "thresholdValue": "Low",
                          "representation": "yellow",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "contains",
                          "thresholdValue": "Informational ",
                          "representation": "gray",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": null,
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "SystemAlertId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "IsIncident",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "AlertURI",
                    "formatter": 5,
                    "formatOptions": {
                      "linkTarget": "Url"
                    }
                  },
                  {
                    "columnMatch": "Status",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "SubscriptionId",
                    "formatter": 15,
                    "formatOptions": {
                      "linkTarget": "Resource",
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Location",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "ResourceId",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": "Resource",
                      "showIcon": true
                    }
                  },
                  {
                    "columnMatch": "Alert ID",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Alert URI",
                    "formatter": 5,
                    "formatOptions": {
                      "linkTarget": "Url"
                    }
                  },
                  {
                    "columnMatch": "Resource ID",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "AlertUri",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "ResourceIdentifier",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "TenantId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "AlertName",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Description",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "ProviderName",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "VendorName",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "VendorOriginalId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "SourceComputerId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "AlertType",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "ConfidenceLevel",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "ConfidenceScore",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "StartTime",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "EndTime",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "ProcessingEndTime",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "RemediationSteps",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "ExtendedProperties",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Entities",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "SourceSystem",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "WorkspaceSubscriptionId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "WorkspaceResourceGroup",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "ExtendedLinks",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "ProductName",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "ProductComponentName",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "AlertLink",
                    "formatter": 7,
                    "formatOptions": {
                      "linkTarget": "Url"
                    }
                  },
                  {
                    "columnMatch": "SystemIncidentId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "SystemAlertId1",
                    "formatter": 5
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "AlertDisplayName",
                    "label": "Alert name"
                  },
                  {
                    "columnId": "IsIncident",
                    "label": "Incident/alert"
                  },
                  {
                    "columnId": "AlertURI",
                    "label": "Alert URI"
                  },
                  {
                    "columnId": "SubscriptionId",
                    "label": "Subscription"
                  },
                  {
                    "columnId": "ResourceGroup",
                    "label": "Resource group"
                  },
                  {
                    "columnId": "tags",
                    "label": "Tags"
                  },
                  {
                    "columnId": "ResourceId",
                    "label": "Resource"
                  }
                ]
              },
              "sortBy": []
            },
            "conditionalVisibility": {
              "parameterName": "View",
              "comparison": "isEqualTo",
              "value": "List"
            },
            "showPin": true,
            "name": "SecurityIncidents",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 11,
            "content": {
              "version": "LinkItem/1.0",
              "style": "list",
              "links": [
                {
                  "id": "8e6f9368-ccbe-4092-b898-8a27c77a06b3",
                  "linkTarget": "OpenBlade",
                  "linkLabel": "Open Alert View",
                  "preText": "",
                  "style": "primary",
                  "bladeOpenContext": {
                    "bladeName": "AlertBlade",
                    "extensionName": "Microsoft_Azure_Security",
                    "bladeParameters": [
                      {
                        "name": "alertId",
                        "source": "static",
                        "value": "{SystemAlertId}"
                      },
                      {
                        "name": "subscriptionId",
                        "source": "static",
                        "value": "{SubscriptionId}"
                      },
                      {
                        "name": "resourceGroup",
                        "source": "static",
                        "value": "{ResourceGroup}"
                      },
                      {
                        "name": "referencedFrom",
                        "source": "static",
                        "value": "activeAlertsWorkbook"
                      },
                      {
                        "name": "location",
                        "source": "static",
                        "value": "{Location}"
                      }
                    ]
                  }
                }
              ]
            },
            "conditionalVisibilities": [
              {
                "parameterName": "View",
                "comparison": "isEqualTo",
                "value": "List"
              },
              {
                "parameterName": "SystemAlertId",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "links - 19"
          },
          {
            "type": 1,
            "content": {
              "json": "<span style=\"font-family: Open Sans; font-weight: 620; font-size: 16px;font-style: bold;margin:-10px 0px 0px 0px;position: relative;top:-3px;left:-4px;\"> To see more information about the alerts in the map view: <br><br> &nbsp; 1. Configure continuous export to export your security alerts to a Log Analytics workspace by following the instructions described \r\n</span>[<span style=\"font-family: Open Sans; font-weight: 620; font-size: 16px;font-style: bold;margin:-10px 0px 0px 0px;position: relative;top:-3px;left:-4px;\"> here. </span>](https://docs.microsoft.com/en-us/azure/defender-for-cloud/continuous-export?tabs=azure-portal)\r\n<span style=\"font-family: Open Sans; font-weight: 620; font-size: 16px;font-style: bold;margin:-10px 0px 0px 0px;position: relative;top:-3px;left:-4px;\"><br> &nbsp;  2. In the \"Workspace\" filter below, choose the Log Analytics workspace your security alerts are exported to.\r\n\r\n"
            },
            "conditionalVisibility": {
              "parameterName": "View",
              "comparison": "isEqualTo",
              "value": "Map"
            },
            "name": "text - 21"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "parameters": [
                {
                  "id": "8724f927-b766-4814-a895-8c55565fb7f8",
                  "version": "KqlParameterItem/1.0",
                  "name": "Workspace",
                  "type": 5,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "resources\r\n| where type contains \"solution\"\r\n| where name contains \"security\"\r\n| project id = tostring(properties.workspaceResourceId)\r\n| distinct id",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                }
              ],
              "style": "pills",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources"
            },
            "conditionalVisibility": {
              "parameterName": "View",
              "comparison": "isEqualTo",
              "value": "Map"
            },
            "name": "parameters - 15"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources\r\n| where type == \"microsoft.security/locations/alerts\"\r\n| project-rename P= properties\r\n| extend Details = parse_json(P)\r\n | extend ResourceIdentifiers = Details.[\"ResourceIdentifiers\"]\r\n| extend IsIncident = Details.[\"IsIncident\"]\r\n| extend AlertDisplayName = Details.[\"AlertDisplayName\"]\r\n| extend SystemAlertId = Details.[\"SystemAlertId\"]\r\n| extend Severity = Details.[\"Severity\"]\r\n| extend AlertLink = Details.[\"AlertUri\"]\r\n| extend Status = Details.[\"Status\"]\r\n| extend Tactics = Details.[\"Intent\"]\r\n| parse AlertLink with * '/subscriptionId/'  SubscriptionId  '/' *\r\n| parse AlertLink with * '/resourceGroup/'  ResourceGroup  '/' *\r\n| parse AlertLink with * '/location/'  Location  \r\n  | mv-expand ResourceIdentifiers\r\n  | extend ResourceId = parse_json(ResourceIdentifiers).[\"AzureResourceId\"]\r\n  | where isnotempty(ResourceId )\r\n| project  Severity, SystemAlertId, tostring(AlertDisplayName),IsIncident = iif(IsIncident==\"true\",\"Incident\",\"Alert\"),tostring(AlertLink),Status,Tactics,tostring(ResourceId),SubscriptionId,ResourceGroup,Location\r\n| distinct tostring(SystemAlertId),tostring(AlertDisplayName),tostring(AlertLink),tostring(ResourceId)\r\n| summarize count() by ResourceId, AlertLink, AlertDisplayName\r\n",
              "size": 0,
              "title": "AlertsMapView ",
              "exportMultipleValues": true,
              "exportAggregateParts": true,
              "exportedParameters": [
                {
                  "fieldName": "ResourceId",
                  "parameterName": "Resource",
                  "parameterType": 1
                },
                {
                  "fieldName": "AlertLink",
                  "parameterName": "AlertLink",
                  "parameterType": 1
                },
                {
                  "fieldName": "AlertDisplayName",
                  "parameterName": "AlertDisplayName",
                  "parameterType": 1
                }
              ],
              "exportToExcelOptions": "all",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "visualization": "map",
              "mapSettings": {
                "locInfo": "AzureResource",
                "locInfoColumn": "ResourceId",
                "sizeSettings": "count_",
                "sizeAggregation": "Sum",
                "legendMetric": "count_",
                "legendAggregation": "Sum",
                "itemColorSettings": {
                  "nodeColorField": "count_",
                  "colorAggregation": "Sum",
                  "type": "heatmap",
                  "heatmapPalette": "coldHot"
                }
              }
            },
            "customWidth": "50",
            "conditionalVisibility": {
              "parameterName": "View",
              "comparison": "isEqualTo",
              "value": "Map"
            },
            "name": "AlertsMapView ",
            "styleSettings": {
              "showBorder": true
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let T = datatable ( AlertLink:string)\r\n[\r\n{AlertLink}\r\n];\r\nT\r\n| parse AlertLink with * '/alertId/' AlertId '/subscriptionId/' SubscriptionId '/resourceGroup/' ResourceGroup '/' * 'location/' Location \r\n| distinct AlertLink, AlertId, ResourceGroup,Location,SubscriptionId\r\n| join kind = inner (SecurityAlert\r\n| where isempty(ResourceId) == false\r\n| where TimeGenerated > ago(90d)\r\n| project SystemAlertId,ResourceId, DisplayName,StartTime) on $left.AlertId == $right.SystemAlertId\r\n| project ResourceId,DisplayName,AlertId, SubscriptionId, ResourceGroup, Location,StartTime\r\n| order by ResourceId,DisplayName, StartTime asc\r\n\r\n\r\n\r\n",
              "size": 0,
              "exportedParameters": [
                {
                  "fieldName": "AlertId",
                  "parameterName": "AlertId",
                  "parameterType": 1
                },
                {
                  "fieldName": "SubscriptionId",
                  "parameterName": "SubscriptionId",
                  "parameterType": 1
                },
                {
                  "fieldName": "Location",
                  "parameterName": "Location",
                  "parameterType": 1
                },
                {
                  "fieldName": "ResourceGroup",
                  "parameterName": "ResourceGroup",
                  "parameterType": 1
                }
              ],
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "crossComponentResources": [
                "{Workspace}"
              ],
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "ResourceId",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "23ch"
                    }
                  },
                  {
                    "columnMatch": "DisplayName",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "45ch"
                    }
                  },
                  {
                    "columnMatch": "AlertId",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Location",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "StartTime",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "23ch"
                    }
                  },
                  {
                    "columnMatch": "TimeGenerated",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "22ch"
                    }
                  },
                  {
                    "columnMatch": "AlertLink",
                    "formatter": 5
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "ResourceId",
                    "label": "Resource ID"
                  },
                  {
                    "columnId": "DisplayName",
                    "label": "Alert name"
                  },
                  {
                    "columnId": "AlertId",
                    "label": "Alert ID"
                  },
                  {
                    "columnId": "SubscriptionId",
                    "label": "Subscription ID"
                  },
                  {
                    "columnId": "ResourceGroup",
                    "label": "Resource group"
                  },
                  {
                    "columnId": "StartTime",
                    "label": "Start time"
                  }
                ]
              },
              "sortBy": [],
              "tileSettings": {
                "showBorder": false
              }
            },
            "customWidth": "45",
            "conditionalVisibilities": [
              {
                "parameterName": "View",
                "comparison": "isEqualTo",
                "value": "Map"
              },
              {
                "parameterName": "AlertLink",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "AlertLink-Table"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "Security"
      },
      "name": "Security Discipline"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "## Governance (Preview)"
            },
            "name": "Title"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "parameters": [
                {
                  "id": "ca214f0d-aa7a-464a-b693-c22db46ae52f",
                  "version": "KqlParameterItem/1.0",
                  "name": "Subscription",
                  "type": 6,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "value": [
                    "/subscriptions/3d2171d3-2b1e-41d6-a62c-dc780b0c5a04"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "includeAll": false,
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  }
                },
                {
                  "id": "4168a8b2-a522-4f0d-9575-893d70d9239d",
                  "version": "KqlParameterItem/1.0",
                  "name": "RulesCount",
                  "type": 1,
                  "description": "Count of the governance rule, when there is no rules, empty state will be shown",
                  "query": "securityresources\r\n| where type == \"microsoft.security/governancerules\"\r\n| where tostring(properties.isDisabled) == \"false\"\r\n| count",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "isHiddenWhenLocked": true,
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                }
              ],
              "style": "above",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources"
            },
            "name": "Tabs"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": []
            },
            "name": "group - 11"
          },
          {
            "type": 1,
            "content": {
              "json": "### Security governance in Microsoft Defender for Cloud\r\n\r\n   Microsoft Defender for Cloud continuously assesses your hybrid and multi-cloud workloads and     provides you with recommendations to harden your assets and enhance your security posture. <br>Central security teams often experience challenges when driving the personnel within their organizations to implement recommendations. The organizations' security posture can suffer as a result.<br>\r\nWe're introducing a brand-new, built-in governance experience to set ownership and expected remediation timeframes to resolve recommendations.\r\n\r\nTo use this governance report, you need to create security governance rules.\r\n<br>[Learn more >](https://aka.ms/GovernanceDocumentation)\r\n"
            },
            "conditionalVisibility": {
              "parameterName": "RulesCount",
              "comparison": "isEqualTo"
            },
            "name": "text - 13"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "Select one or more governance rules from the list to see a list of affected recommendations",
                    "style": "info"
                  },
                  "name": "RulesGridExplination"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "securityresources         \r\n| where type == \"microsoft.security/assessments\"\r\n| where isnull(properties.resourceDetails.AwsResourceId) and isnull(properties.resourceDetails.GcpResourceId)\r\n| extend DisplayName = tostring(properties.displayName)\r\n| where isempty(DisplayName) == false\r\n| join kind=leftouter   (securityresources         \r\n| where type == \"microsoft.security/assessments/governanceassignments\"\r\n| extend  assignedResourceId = tostring(todynamic(properties).assignedResourceId)\r\n| extend remediationDueDate = todatetime(properties.remediationDueDate)\r\n| project id = assignedResourceId, governanceassignmentsProperties = todynamic(properties), remediationDueDate) on id\r\n| extend hasAssignment = isempty( governanceassignmentsProperties) == false and isnull( governanceassignmentsProperties) == false\r\n| extend assignmentStatus = iif(tostring(properties.status.code) == \"Unhealthy\",iif(hasAssignment == true, iif(bin(remediationDueDate, 1d) < bin(now(), 1d), \"Overdue\", \"Ontime\"), \"Unassigned\") , \"Completed\")\r\n| summarize count() by assignmentStatus\r\n",
                    "size": 3,
                    "title": "Resource status",
                    "noDataMessage": "No unhealthy resources found",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "piechart",
                    "tileSettings": {
                      "titleContent": {
                        "columnMatch": "OsType",
                        "formatter": 1
                      },
                      "leftContent": {
                        "columnMatch": "count_",
                        "formatter": 12,
                        "formatOptions": {
                          "palette": "auto"
                        },
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "style": "decimal",
                            "useGrouping": false,
                            "maximumFractionDigits": 2,
                            "maximumSignificantDigits": 3
                          }
                        }
                      },
                      "showBorder": true
                    },
                    "graphSettings": {
                      "type": 0,
                      "topContent": {
                        "columnMatch": "OsType",
                        "formatter": 1
                      },
                      "centerContent": {
                        "columnMatch": "count_",
                        "formatter": 1,
                        "numberFormat": {
                          "unit": 17,
                          "options": {
                            "maximumSignificantDigits": 3,
                            "maximumFractionDigits": 2
                          }
                        }
                      }
                    },
                    "chartSettings": {
                      "seriesLabelSettings": [
                        {
                          "seriesName": "Ontime",
                          "color": "blue"
                        },
                        {
                          "seriesName": "Completed",
                          "color": "green"
                        },
                        {
                          "seriesName": "Unassigned",
                          "color": "orange"
                        },
                        {
                          "seriesName": "Overdue",
                          "color": "redBright"
                        }
                      ]
                    }
                  },
                  "customWidth": "20",
                  "name": "statusePerAssessment"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "securityresources\r\n| where type == \"microsoft.security/governancerules\"\r\n| where tostring(properties.isDisabled) == \"false\"\r\n| extend ruleName = todynamic(name)\r\n| extend ownerType = iif(tostring(properties.ownerSource.type) == \"Manually\", \"Email\", \"ByTag\")\r\n| extend description = tostring(properties.description)\r\n| extend displayName = tostring(properties.displayName)\r\n| extend governanceEmailNotification = todynamic(properties.governanceEmailNotification)\r\n| extend isGracePeriod = todynamic(properties.isGracePeriod)\r\n| extend remediationTimeframe = todynamic(properties.remediationTimeframe)\r\n| extend Days = tolong(totimespan(remediationTimeframe)/1d)\r\n| extend Days = iff(Days > 0, iff(Days == 1, \"1 day\", strcat(Days,\" days\")), \"\")\r\n| extend sourceResourceType = todynamic(properties.sourceResourceType)\r\n| extend conditionSets = todynamic(properties.conditionSets)\r\n| extend rulePriority = todynamic(properties.rulePriority)\r\n| extend ownerSource = todynamic(properties.ownerSource)\r\n| extend isDisabled = todynamic(properties.isDisabled)\r\n| extend ruleType = todynamic(properties.ruleType)\r\n| extend  RuleConditionSet = tostring(properties.conditionSets), property =  properties.conditionSets[0].conditions[0].property, operator = properties.conditionSets[0].conditions[0].operator\r\n| project Subscription = tostring(subscriptionId), [\"Display name\"] = tostring(properties.displayName), Priority = toint(properties.rulePriority), [\"Remediation timeframe\"] = Days, [\"Owner type\"] = ownerType, Owner = tostring(properties.ownerSource.value), [\"Grace period enabled\"] = tostring(properties.isGracePeriod), Rule = id, properties, RuleConditionSet\r\n| sort by Subscription, Priority asc",
                    "size": 0,
                    "title": "Governance rules",
                    "noDataMessage": "No Rules found",
                    "exportMultipleValues": true,
                    "exportedParameters": [
                      {
                        "fieldName": "Rule",
                        "parameterName": "Rule",
                        "parameterType": 1,
                        "quote": ""
                      },
                      {
                        "fieldName": "RuleConditionSet",
                        "parameterName": "RuleConditionSet",
                        "parameterType": 1,
                        "quote": ""
                      },
                      {
                        "fieldName": "Owner",
                        "parameterName": "Owner",
                        "parameterType": 1,
                        "quote": ""
                      }
                    ],
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Subscription",
                          "formatter": 15,
                          "formatOptions": {
                            "linkTarget": "Resource",
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "Display name",
                          "formatter": 1,
                          "formatOptions": {
                            "bladeOpenContext": {
                              "bladeName": "CreateGovernanceRuleContextBlade",
                              "extensionName": "Microsoft_Azure_Security",
                              "bladeParameters": [
                                {
                                  "name": "",
                                  "source": "column",
                                  "value": "properties"
                                },
                                {
                                  "name": "subscriptionId",
                                  "source": "column",
                                  "value": "subscriptionId"
                                },
                                {
                                  "name": "governanceRuleToEdit",
                                  "source": "column",
                                  "value": "properties"
                                }
                              ]
                            }
                          }
                        },
                        {
                          "columnMatch": "Priority",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "Remediation timeframe",
                          "formatter": 0,
                          "tooltipFormat": {
                            "tooltip": "DD.HH.MM.SS"
                          }
                        },
                        {
                          "columnMatch": "Grace period enabled",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "true",
                                "representation": "success",
                                "text": ""
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "false",
                                "representation": "4",
                                "text": ""
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Rule",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "subscriptionId",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "name",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "DisplayName",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "ownerDetails",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "isGracePeriod",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "remediationTimeframe",
                          "formatter": 1
                        }
                      ],
                      "rowLimit": 1000,
                      "filter": true,
                      "sortBy": [
                        {
                          "itemKey": "$gen_link_Subscription_0",
                          "sortOrder": 2
                        }
                      ],
                      "labelSettings": [
                        {
                          "columnId": "Owner",
                          "label": "Owner details"
                        }
                      ]
                    },
                    "sortBy": [
                      {
                        "itemKey": "$gen_link_Subscription_0",
                        "sortOrder": 2
                      }
                    ]
                  },
                  "customWidth": "80",
                  "conditionalVisibility": {
                    "parameterName": "Subscription",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "Rules",
                  "styleSettings": {
                    "maxWidth": "100"
                  }
                }
              ],
              "exportParameters": true
            },
            "customWidth": "100",
            "conditionalVisibility": {
              "parameterName": "RulesCount",
              "comparison": "isNotEqualTo"
            },
            "name": "subscriptionOverView"
          },
          {
            "type": 1,
            "content": {
              "json": "---"
            },
            "conditionalVisibility": {
              "parameterName": "selectedTab",
              "comparison": "isEqualTo",
              "value": "resourceView"
            },
            "name": "LineSeparator1"
          },
          {
            "type": 1,
            "content": {
              "json": "💡 Selected filter for **RuleConditionSet:** {RuleConditionSet}\r\n💡 Selected filter for **Rule:** {Rule}\r\n💡 Selected filter for **Owner:** {Owner}\r\n",
              "style": "{selectedTab}"
            },
            "conditionalVisibility": {
              "parameterName": "parameter1",
              "comparison": "isEqualTo",
              "value": "1"
            },
            "name": "ResourceFilter"
          },
          {
            "type": 1,
            "content": {
              "json": " \r\n---"
            },
            "conditionalVisibility": {
              "parameterName": "selectedTab",
              "comparison": "isEqualTo",
              "value": "resourceView"
            },
            "name": "LineSeparator2"
          },
          {
            "type": 1,
            "content": {
              "json": "Select a recommendation from the list to see a list of affected resources",
              "style": "info"
            },
            "conditionalVisibilities": [
              {
                "parameterName": "Rule",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "DisplayName",
                "comparison": "isEqualTo"
              }
            ],
            "name": "assessmentsExplaination"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources         \r\n| where type == \"microsoft.security/assessments\"\r\n| where isnull(properties.resourceDetails.AwsResourceId) and isnull(properties.resourceDetails.GcpResourceId)\r\n| extend DisplayName = tostring(properties.displayName)\r\n| where isempty(DisplayName) == false\r\n| extend RuleConditionSet = '{RuleConditionSet}'\r\n| where RuleConditionSet contains name or RuleConditionSet contains properties.metadata.severity\r\n| join kind=leftouter   (securityresources         \r\n| where type == \"microsoft.security/assessments/governanceassignments\"\r\n| extend  assignedResourceId = tostring(todynamic(properties).assignedResourceId)\r\n| extend remediationDueDate = todatetime(properties.remediationDueDate)\r\n| project id = assignedResourceId, governanceassignmentsProperties = todynamic(properties), remediationDueDate) on id\r\n| extend hasAssignment = isempty( governanceassignmentsProperties) == false and isnull( governanceassignmentsProperties) == false\r\n| extend assignmentStatus = iif(tostring(properties.status.code) == \"Unhealthy\",iif(hasAssignment == true, iif(bin(remediationDueDate, 1d) < bin(now(), 1d), \"Overdue\", \"Ontime\"), \"Unassigned\") , \"Completed\")\r\n| summarize count() by assignmentStatus",
              "size": 3,
              "title": "Status per rule",
              "noDataMessage": "No unhealthy resources found",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "visualization": "piechart",
              "gridSettings": {
                "rowLimit": 10000
              },
              "tileSettings": {
                "titleContent": {
                  "columnMatch": "OsType",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "count_",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "style": "decimal",
                      "useGrouping": false,
                      "maximumFractionDigits": 2,
                      "maximumSignificantDigits": 3
                    }
                  }
                },
                "showBorder": true
              },
              "graphSettings": {
                "type": 0,
                "topContent": {
                  "columnMatch": "OsType",
                  "formatter": 1
                },
                "centerContent": {
                  "columnMatch": "count_",
                  "formatter": 1,
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              },
              "chartSettings": {
                "seriesLabelSettings": [
                  {
                    "seriesName": "Ontime",
                    "color": "blue"
                  },
                  {
                    "seriesName": "Completed",
                    "color": "green"
                  },
                  {
                    "seriesName": "Unassigned",
                    "color": "orange"
                  },
                  {
                    "seriesName": "Overdue",
                    "color": "redBright"
                  }
                ]
              }
            },
            "customWidth": "20",
            "conditionalVisibility": {
              "parameterName": "Rule",
              "comparison": "isNotEqualTo"
            },
            "name": "statusPerRule"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources         \r\n| where type == \"microsoft.security/assessments\"\r\n| where isnull(properties.resourceDetails.AwsResourceId) and isnull(properties.resourceDetails.GcpResourceId)\r\n| extend DisplayName = tostring(properties.displayName)\r\n| where isempty(DisplayName) == false\r\n| extend RuleConditionSet = '{RuleConditionSet}'\r\n| where RuleConditionSet contains name or RuleConditionSet contains properties.metadata.severity\r\n| join kind=leftouter   (securityresources         \r\n| where type == \"microsoft.security/assessments/governanceassignments\"\r\n| extend  assignedResourceId = tostring(todynamic(properties).assignedResourceId)\r\n| extend remediationDueDate = todatetime(properties.remediationDueDate)\r\n| project id = assignedResourceId, governanceassignmentsProperties = todynamic(properties), remediationDueDate) on id\r\n| extend hasAssignment = isempty( governanceassignmentsProperties) == false and isnull( governanceassignmentsProperties) == false\r\n| where hasAssignment == true\r\n| extend owner = tostring(governanceassignmentsProperties.owner)\r\n| extend owner = iif(isnull(owner) == false and isempty(owner) == false, owner, \"Unspecified\")\r\n| extend assignmentStatus = iif(bin(remediationDueDate, 1d) < bin(now(), 1d), \"Overdue\", \"Ontime\")\r\n| summarize Ontime = countif(assignmentStatus == \"Ontime\"), Overdue = countif(assignmentStatus == \"Overdue\") by selectedOwner = owner\r\n| sort by Overdue desc",
              "size": 0,
              "title": "Status per owner",
              "exportMultipleValues": true,
              "exportedParameters": [
                {
                  "fieldName": "selectedOwner",
                  "parameterName": "selectedOwner",
                  "quote": ""
                }
              ],
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "Ontime",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "!=",
                          "thresholdValue": "0",
                          "representation": "info",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "Overdue",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "!=",
                          "thresholdValue": "0",
                          "representation": "3",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "selectedOwner",
                    "label": "Owner"
                  }
                ]
              }
            },
            "customWidth": "30",
            "conditionalVisibilities": [
              {
                "parameterName": "Owner",
                "comparison": "isNotEqualTo"
              },
              {
                "parameterName": "RuleConditionSet",
                "comparison": "isNotEqualTo"
              }
            ],
            "name": "Owner status"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "securityresources         \r\n| where type == \"microsoft.security/assessments\"\r\n| where isnull(properties.resourceDetails.AwsResourceId) and isnull(properties.resourceDetails.GcpResourceId)\r\n| extend DisplayName = tostring(properties.displayName)\r\n| where isempty(DisplayName) == false and isnull(DisplayName) == false\r\n| extend RuleConditionSet = '{RuleConditionSet}'\r\n| where RuleConditionSet contains name or RuleConditionSet contains properties.metadata.severity\r\n| join kind=leftouter   (securityresources         \r\n| where type == \"microsoft.security/assessments/governanceassignments\"\r\n| extend  assignedResourceId = tostring(todynamic(properties).assignedResourceId)\r\n| extend remediationDueDate = todatetime(properties.remediationDueDate)\r\n| project id = assignedResourceId, governanceassignmentsProperties = todynamic(properties), remediationDueDate) on id\r\n| extend hasAssignment = isempty( governanceassignmentsProperties) == false and isnull( governanceassignmentsProperties) == false\r\n| extend assignmentStatus = iif(tostring(properties.status.code) == \"Unhealthy\",iif(hasAssignment == true, iif(bin(remediationDueDate, 1d) < bin(now(), 1d), \"Overdue\", \"Ontime\"), \"Unassigned\") , \"Completed\")\r\n| extend Status = assignmentStatus\r\n| summarize Completed = countif(Status == \"Completed\"), Ontime = countif(Status == \"Ontime\"), Overdue = countif(Status == \"Overdue\"),Unassigned = countif(Status == \"Unassigned\") by DisplayName = tostring(properties.displayName)\r\n| sort by Overdue desc",
              "size": 0,
              "title": "Recommendations",
              "noDataMessage": "No Assessments found",
              "exportedParameters": [
                {
                  "fieldName": "id",
                  "parameterName": "id",
                  "parameterType": 1
                },
                {
                  "fieldName": "DisplayName",
                  "parameterName": "DisplayName",
                  "parameterType": 1
                }
              ],
              "showExportToExcel": true,
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "DisplayName",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "75ch"
                    }
                  },
                  {
                    "columnMatch": "Completed",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "!=",
                          "thresholdValue": "0",
                          "representation": "success",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "Ontime",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "!=",
                          "thresholdValue": "0",
                          "representation": "1",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        },
                        {
                          "representation": "Unknown",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "Overdue",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "!=",
                          "thresholdValue": "0",
                          "representation": "3",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "{0}{1}"
                        }
                      ],
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "Unassigned",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "!=",
                          "thresholdValue": "0",
                          "representation": "2",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "Blank",
                          "text": "0"
                        }
                      ],
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "Status",
                    "formatter": 1
                  },
                  {
                    "columnMatch": "id",
                    "formatter": 1,
                    "formatOptions": {
                      "customColumnWidthSetting": "90ch"
                    }
                  },
                  {
                    "columnMatch": "owner",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "40ch"
                    }
                  },
                  {
                    "columnMatch": "DueDate",
                    "formatter": 6
                  },
                  {
                    "columnMatch": "Severity",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "Resource",
                    "formatter": 13,
                    "formatOptions": {
                      "linkTarget": "OpenBlade",
                      "linkIsContextBlade": false,
                      "showIcon": true,
                      "bladeOpenContext": {
                        "bladeName": "GenericResourceHealthDetailsBlade",
                        "extensionName": "Microsoft_Azure_Security",
                        "bladeParameters": [
                          {
                            "name": "resourceId",
                            "source": "cell",
                            "value": "%2Fsubscriptions%2F3b5bc982-20bc-4b59-b1ca-f8488bb86736%2FresourceGroups%2Fdemo%2Fproviders%2FMicrosoft.HybridCompute%2Fmachines%2FW2019"
                          }
                        ]
                      },
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "ResourceGroup",
                    "formatter": 14,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true,
                      "customColumnWidthSetting": "25ch"
                    }
                  },
                  {
                    "columnMatch": "Source",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "15ch"
                    }
                  },
                  {
                    "columnMatch": "OperatingSystem",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "25ch"
                    }
                  },
                  {
                    "columnMatch": "Category",
                    "formatter": 0,
                    "formatOptions": {
                      "customColumnWidthSetting": "20ch"
                    }
                  },
                  {
                    "columnMatch": "Remediation",
                    "formatter": 5
                  },
                  {
                    "columnMatch": "RemediationSteps",
                    "formatter": 11,
                    "formatOptions": {
                      "linkColumn": "Remediation",
                      "linkTarget": "Url"
                    },
                    "tooltipFormat": {
                      "tooltip": "Click to view remediation steps"
                    }
                  },
                  {
                    "columnMatch": "Code",
                    "formatter": 18,
                    "formatOptions": {
                      "thresholdsOptions": "icons",
                      "thresholdsGrid": [
                        {
                          "operator": "==",
                          "thresholdValue": "Healthy",
                          "representation": "success",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "==",
                          "thresholdValue": "Unhealthy",
                          "representation": "3",
                          "text": "{0}{1}"
                        },
                        {
                          "operator": "Default",
                          "thresholdValue": null,
                          "representation": "success",
                          "text": "{0}{1}"
                        }
                      ]
                    }
                  },
                  {
                    "columnMatch": "resourceGroup",
                    "formatter": 14,
                    "formatOptions": {
                      "linkTarget": null,
                      "showIcon": true
                    }
                  }
                ],
                "rowLimit": 10000,
                "filter": true,
                "sortBy": [
                  {
                    "itemKey": "$gen_thresholds_Ontime_2",
                    "sortOrder": 2
                  }
                ],
                "labelSettings": [
                  {
                    "columnId": "DisplayName",
                    "label": "Display name"
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "$gen_thresholds_Ontime_2",
                  "sortOrder": 2
                }
              ]
            },
            "customWidth": "50",
            "conditionalVisibility": {
              "parameterName": "Rule",
              "comparison": "isNotEqualTo"
            },
            "name": "Assessmetns"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": ""
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {
                    "parameterName": "RuleConditionSet",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "empty text"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "securityresources         \r\n| where type == \"microsoft.security/assessments\"\r\n| where isnull(properties.resourceDetails.AwsResourceId) and isnull(properties.resourceDetails.GcpResourceId)\r\n| extend displayNameFilter = tostring(\"{DisplayName}\")\r\n| extend selectedOwner = '{selectedOwner}'\r\n| where displayNameFilter == tostring(properties.displayName)\r\n| join kind=leftouter   (securityresources         \r\n| where type == \"microsoft.security/assessments/governanceassignments\"\r\n| extend  assignedResourceId = tostring(todynamic(properties).assignedResourceId)\r\n| extend remediationDueDate = todatetime(properties.remediationDueDate)\r\n| project id = assignedResourceId, owner = properties.owner,governanceassignmentsProperties = todynamic(properties), remediationDueDate, isGrace = properties.isGracePeriod) on id\r\n| extend hasAssignment = isempty( governanceassignmentsProperties) == false and isnull( governanceassignmentsProperties) == false\r\n| extend assignmentStatus = iif(tostring(properties.status.code) == \"Unhealthy\",iif(hasAssignment == true, iif(bin(remediationDueDate, 1d) < bin(now(), 1d), \"Overdue\", \"Ontime\"), \"Unassigned\") , \"Completed\")\r\n| extend source = trim(' ', tolower(tostring(properties.resourceDetails.Source)))\r\n                                          | extend resourceId = iff(source =~ \"azure\", properties.resourceDetails.Id, iff(source =~ \"aws\" and isnotempty(tostring(properties.resourceDetails.ConnectorId)), properties.resourceDetails.Id, iff(source =~ \"gcp\" and isnotempty(tostring(properties.resourceDetails.ConnectorId)), properties.resourceDetails.Id, iff(source =~ 'aws', properties.resourceDetails.AzureResourceId, iff(source =~ 'gcp', properties.resourceDetails.AzureResourceId, properties.resourceDetails.Id)))))\r\n| extend owner = tostring(governanceassignmentsProperties.owner)\r\n| extend owner = iif(isnull(owner) == false and isempty(owner) == false and hasAssignment == true , owner, iif(hasAssignment == false, owner, \"Unspecified\"))\r\n| where '{selectedOwner}' == '' or (selectedOwner contains owner and hasAssignment == true)\r\n| project [\"Resource\"] = resourceId, Subscription = subscriptionId ,Status = assignmentStatus, Owner = owner, [\"Due date\"] = remediationDueDate, [\"Grace period enabled\"] = isGrace\r\n| sort by Status desc",
                          "size": 0,
                          "title": "List of resources for: {DisplayName}",
                          "noDataMessage": "No Assessments found",
                          "exportFieldName": "id",
                          "exportParameterName": "id",
                          "showExportToExcel": true,
                          "queryType": 1,
                          "resourceType": "microsoft.resourcegraph/resources",
                          "crossComponentResources": [
                            "{Subscription}"
                          ],
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "Resource id",
                                "formatter": 13,
                                "formatOptions": {
                                  "linkTarget": null,
                                  "showIcon": true,
                                  "customColumnWidthSetting": "90ch"
                                }
                              },
                              {
                                "columnMatch": "Subscription",
                                "formatter": 15,
                                "formatOptions": {
                                  "linkTarget": "Resource",
                                  "showIcon": true
                                }
                              },
                              {
                                "columnMatch": "Status",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Completed",
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Unassigned",
                                      "representation": "2",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Overdue",
                                      "representation": "3",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Ontime",
                                      "representation": "1",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                },
                                "numberFormat": {
                                  "unit": 0,
                                  "options": {
                                    "style": "decimal"
                                  }
                                }
                              },
                              {
                                "columnMatch": "Grace period enabled",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "true",
                                      "representation": "success",
                                      "text": ""
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "false",
                                      "representation": "4",
                                      "text": ""
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "Blank",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "owner",
                                "formatter": 0,
                                "formatOptions": {
                                  "customColumnWidthSetting": "40ch"
                                }
                              },
                              {
                                "columnMatch": "DueDate",
                                "formatter": 6
                              },
                              {
                                "columnMatch": "id",
                                "formatter": 0,
                                "formatOptions": {
                                  "customColumnWidthSetting": "90ch"
                                }
                              },
                              {
                                "columnMatch": "DisplayName",
                                "formatter": 0,
                                "formatOptions": {
                                  "customColumnWidthSetting": "100ch"
                                }
                              },
                              {
                                "columnMatch": "Completed",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "green",
                                  "customColumnWidthSetting": "15ch"
                                }
                              },
                              {
                                "columnMatch": "Ontime",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "blue",
                                  "customColumnWidthSetting": "15ch"
                                }
                              },
                              {
                                "columnMatch": "Overdue",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "redBright",
                                  "customColumnWidthSetting": "15ch"
                                }
                              },
                              {
                                "columnMatch": "Unassigned",
                                "formatter": 4,
                                "formatOptions": {
                                  "palette": "orange",
                                  "customColumnWidthSetting": "15ch"
                                }
                              },
                              {
                                "columnMatch": "Severity",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "Resource",
                                "formatter": 13,
                                "formatOptions": {
                                  "linkTarget": "OpenBlade",
                                  "linkIsContextBlade": false,
                                  "showIcon": true,
                                  "bladeOpenContext": {
                                    "bladeName": "GenericResourceHealthDetailsBlade",
                                    "extensionName": "Microsoft_Azure_Security",
                                    "bladeParameters": [
                                      {
                                        "name": "resourceId",
                                        "source": "cell",
                                        "value": "%2Fsubscriptions%2F3b5bc982-20bc-4b59-b1ca-f8488bb86736%2FresourceGroups%2Fdemo%2Fproviders%2FMicrosoft.HybridCompute%2Fmachines%2FW2019"
                                      }
                                    ]
                                  },
                                  "customColumnWidthSetting": "20ch"
                                }
                              },
                              {
                                "columnMatch": "ResourceGroup",
                                "formatter": 14,
                                "formatOptions": {
                                  "linkTarget": null,
                                  "showIcon": true,
                                  "customColumnWidthSetting": "25ch"
                                }
                              },
                              {
                                "columnMatch": "Source",
                                "formatter": 0,
                                "formatOptions": {
                                  "customColumnWidthSetting": "15ch"
                                }
                              },
                              {
                                "columnMatch": "OperatingSystem",
                                "formatter": 0,
                                "formatOptions": {
                                  "customColumnWidthSetting": "25ch"
                                }
                              },
                              {
                                "columnMatch": "Category",
                                "formatter": 0,
                                "formatOptions": {
                                  "customColumnWidthSetting": "20ch"
                                }
                              },
                              {
                                "columnMatch": "Remediation",
                                "formatter": 5
                              },
                              {
                                "columnMatch": "RemediationSteps",
                                "formatter": 11,
                                "formatOptions": {
                                  "linkColumn": "Remediation",
                                  "linkTarget": "Url"
                                },
                                "tooltipFormat": {
                                  "tooltip": "Click to view remediation steps"
                                }
                              },
                              {
                                "columnMatch": "Code",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "icons",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Healthy",
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Unhealthy",
                                      "representation": "3",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "representation": "success",
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "resourceGroup",
                                "formatter": 14,
                                "formatOptions": {
                                  "linkTarget": null,
                                  "showIcon": true
                                }
                              }
                            ],
                            "rowLimit": 10000,
                            "filter": true
                          },
                          "sortBy": []
                        },
                        "conditionalVisibility": {
                          "parameterName": "DisplayName",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "Assignments"
                      }
                    ]
                  },
                  "name": "assessmentsWithExplaination"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "💡 Selected filter for **DisplayName:** {DisplayName}\r\n💡 Selected filter for **selectedOwner:** {selectedOwner}\r\n",
                    "style": "{selectedTab}"
                  },
                  "conditionalVisibility": {
                    "parameterName": "parameter1",
                    "comparison": "isEqualTo",
                    "value": "1"
                  },
                  "name": "ResourceFilter - Copy"
                }
              ]
            },
            "name": "assessmentsGrid"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "Policies"
      },
      "name": "Policies"
    }
  ],
  "fallbackResourceIds": [
    "azure monitor"
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}